;; Compile Options : /TML610111 /MS /near /Icommon /Imain /Iirq /Itimer /Iclock /Itbc /Ipwm /Iuart /Ivolume /Iled /Ii2c /SS 256 /SD /Oa /Ot /W 1 /Ff /Fa_output\_obj\ 
;; Version Number  : Ver.3.41.8
;; File Name       : main.c

	type (ML610111) 
	fastfloat
	model small, near
	$$NVARmain segment data 2h #0h
	$$NINITVAR segment data 2h #0h
	$$NINITTAB segment table 2h any
	$$BLINK$main segment code 2h #0h
	$$BLINK_SLOW$main segment code 2h #0h
	$$GetUART_Command$main segment code 2h #0h
	$$I2C_Read$main segment code 2h #0h
	$$I2C_Write$main segment code 2h #0h
	$$Init_KMX61$main segment code 2h #0h
	$$Initialization$main segment code 2h #0h
	$$NOP1000$main segment code 2h #0h
	$$NOPms$main segment code 2h #0h
	$$OutputPWM$main segment code 2h #0h
	$$PinB0_PWM$main segment code 2h #0h
	$$PortA_Digital_Inputs$main segment code 2h #0h
	$$PortA_Low$main segment code 2h #0h
	$$PortB_Low$main segment code 2h #0h
	$$PortC_Low$main segment code 2h #0h
	$$SWEEP_RGB$main segment code 2h #0h
	$$SetOSC$main segment code 2h #0h
	$$TAB$$S135$main segment table 2h #0h
	$$TAB$$S139$main segment table 2h #0h
	$$TABALS0_LSB$main segment table 2h #0h
	$$TABALS0_MSB$main segment table 2h #0h
	$$TABALS1_LSB$main segment table 2h #0h
	$$TABALS1_MSB$main segment table 2h #0h
	$$TABKMX61_ACCEL_XOUT_H$main segment table 2h #0h
	$$TABKMX61_ACCEL_XOUT_L$main segment table 2h #0h
	$$TABKMX61_ACCEL_YOUT_H$main segment table 2h #0h
	$$TABKMX61_ACCEL_YOUT_L$main segment table 2h #0h
	$$TABKMX61_ACCEL_ZOUT_H$main segment table 2h #0h
	$$TABKMX61_ACCEL_ZOUT_L$main segment table 2h #0h
	$$TABKMX61_BTH$main segment table 2h #0h
	$$TABKMX61_BTSC$main segment table 2h #0h
	$$TABKMX61_BUF_CLEAR$main segment table 2h #0h
	$$TABKMX61_BUF_CTRL1$main segment table 2h #0h
	$$TABKMX61_BUF_CTRL1_CFGDAT$main segment table 2h #0h
	$$TABKMX61_BUF_CTRL2$main segment table 2h #0h
	$$TABKMX61_BUF_CTRL2_CFGDAT$main segment table 2h #0h
	$$TABKMX61_BUF_READ$main segment table 2h #0h
	$$TABKMX61_BUF_STATUS_H$main segment table 2h #0h
	$$TABKMX61_BUF_STATUS_L$main segment table 2h #0h
	$$TABKMX61_BUF_STATUS_REG$main segment table 2h #0h
	$$TABKMX61_BUF_THRESH_H$main segment table 2h #0h
	$$TABKMX61_BUF_THRESH_L$main segment table 2h #0h
	$$TABKMX61_CNTL1$main segment table 2h #0h
	$$TABKMX61_CNTL1_CFGDAT$main segment table 2h #0h
	$$TABKMX61_CNTL2$main segment table 2h #0h
	$$TABKMX61_CNTL2_CFGDAT$main segment table 2h #0h
	$$TABKMX61_COTR$main segment table 2h #0h
	$$TABKMX61_I2C_ADDR$main segment table 2h #0h
	$$TABKMX61_INC1$main segment table 2h #0h
	$$TABKMX61_INC1_CFGDAT$main segment table 2h #0h
	$$TABKMX61_INC2$main segment table 2h #0h
	$$TABKMX61_INC3$main segment table 2h #0h
	$$TABKMX61_INC3_CFGDAT$main segment table 2h #0h
	$$TABKMX61_INL$main segment table 2h #0h
	$$TABKMX61_INS1$main segment table 2h #0h
	$$TABKMX61_INS2$main segment table 2h #0h
	$$TABKMX61_MAG_XOUT_H$main segment table 2h #0h
	$$TABKMX61_MAG_XOUT_L$main segment table 2h #0h
	$$TABKMX61_MAG_YOUT_H$main segment table 2h #0h
	$$TABKMX61_MAG_YOUT_L$main segment table 2h #0h
	$$TABKMX61_MAG_ZOUT_H$main segment table 2h #0h
	$$TABKMX61_MAG_ZOUT_L$main segment table 2h #0h
	$$TABKMX61_ODCNTL$main segment table 2h #0h
	$$TABKMX61_ODCNTL_CFGDAT$main segment table 2h #0h
	$$TABKMX61_SELF_TEST$main segment table 2h #0h
	$$TABKMX61_SELF_TEST_CFGDAT$main segment table 2h #0h
	$$TABKMX61_SN_1$main segment table 2h #0h
	$$TABKMX61_SN_2$main segment table 2h #0h
	$$TABKMX61_SN_3$main segment table 2h #0h
	$$TABKMX61_SN_4$main segment table 2h #0h
	$$TABKMX61_STATUS_REG$main segment table 2h #0h
	$$TABKMX61_STBY_REG$main segment table 2h #0h
	$$TABKMX61_TEMP_EN_CNTL$main segment table 2h #0h
	$$TABKMX61_TEMP_EN_CNTL_CFGDAT$main segment table 2h #0h
	$$TABKMX61_TEMP_OUT_H$main segment table 2h #0h
	$$TABKMX61_TEMP_OUT_L$main segment table 2h #0h
	$$TABKMX61_WHO_AM_I$main segment table 2h #0h
	$$TABKMX61_WUFC$main segment table 2h #0h
	$$TABKMX61_WUFC_CFGDAT$main segment table 2h #0h
	$$TABKMX61_WUFTH$main segment table 2h #0h
	$$TABKMX61_WUFTH_CFGDAT$main segment table 2h #0h
	$$TABKMX61_XOUT_HPF_H$main segment table 2h #0h
	$$TABKMX61_XOUT_HPF_L$main segment table 2h #0h
	$$TABKMX61_YOUT_HPF_H$main segment table 2h #0h
	$$TABKMX61_YOUT_HPF_L$main segment table 2h #0h
	$$TABKMX61_ZOUT_HPF_H$main segment table 2h #0h
	$$TABKMX61_ZOUT_HPF_L$main segment table 2h #0h
	$$TABManufact_ID$main segment table 2h #0h
	$$TABProx_ModeCTR$main segment table 2h #0h
	$$TABProx_PS_LSB$main segment table 2h #0h
	$$TABProx_PS_MSB$main segment table 2h #0h
	$$TAB_uartSetParam$main segment table 2h #0h
	$$_funcI2CFin$main segment code 2h #0h
	$$_funcUartFin$main segment code 2h #0h
	$$_intI2c$main segment code 2h #0h
	$$_intPB2$main segment code 2h #0h
	$$_intUart$main segment code 2h #0h
	$$analog_comparator$main segment code 2h #0h
	$$checkI2C$main segment code 2h #0h
	$$main$main segment code 2h #0h
	$$main_clrWDT$main segment code 2h #0h
	$$main_reqNotHalt$main segment code 2h #0h
	$$write$main segment code 2h #0h
	STACKSEG 0100h
CVERSION 3.41.8
CGLOBAL 01H 03H 0000H "NOPms" 08H 02H 0C3H 00H 81H 0aH 00H 00H 07H
CGLOBAL 01H 03H 0000H "checkI2C" 08H 02H 0BDH 00H 81H 02H 00H 00H 07H
CGLOBAL 01H 03H 0000H "main_clrWDT" 08H 02H 0B1H 00H 80H 00H 00H 00H 07H
CSGLOBAL 03H 0000H "_funcUartFin" 08H 02H 0BBH 00H 81H 02H 00H 00H 07H
CGLOBAL 01H 03H 0000H "main_reqNotHalt" 08H 02H 0BEH 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "GetUART_Command" 08H 02H 0CCH 00H 81H 16H 00H 00H 07H
CSGLOBAL 03H 0000H "Initialization" 08H 02H 0B2H 00H 81H 04H 00H 00H 07H
CGLOBAL 01H 03H 0000H "PortA_Digital_Inputs" 08H 02H 0E3H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "BLINK" 08H 02H 0C5H 00H 81H 02H 00H 00H 07H
CGLOBAL 01H 03H 0000H "SWEEP_RGB" 08H 02H 0C7H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "main" 08H 02H 0C8H 00H 80H 06H 00H 00H 01H
CSGLOBAL 03H 0000H "_intUart" 08H 02H 0BFH 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "I2C_Write" 08H 02H 0B9H 00H 83H 10H 00H 00H 07H
CGLOBAL 01H 03H 0000H "OutputPWM" 08H 02H 0C4H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "NOP1000" 08H 02H 0C2H 00H 80H 00H 00H 00H 07H
CSGLOBAL 03H 0000H "_intI2c" 08H 02H 0C0H 00H 81H 02H 00H 00H 07H
CGLOBAL 01H 03H 0000H "write" 08H 02H 0B7H 00H 83H 08H 00H 00H 01H
CSGLOBAL 03H 0000H "SetOSC" 08H 02H 0B3H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "PortC_Low" 08H 02H 0B6H 00H 80H 00H 00H 00H 07H
CSGLOBAL 03H 0000H "_intPB2" 08H 02H 0C1H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "PortB_Low" 08H 02H 0B5H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "I2C_Read" 08H 02H 0B8H 00H 83H 10H 00H 00H 07H
CGLOBAL 01H 03H 0000H "PortA_Low" 08H 02H 0B4H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "analog_comparator" 08H 02H 0DFH 00H 80H 00H 00H 00H 07H
CSGLOBAL 03H 0000H "_funcI2CFin" 08H 02H 0BCH 00H 81H 02H 00H 00H 07H
CGLOBAL 01H 03H 0000H "Init_KMX61" 08H 02H 0BAH 00H 81H 08H 00H 00H 07H
CGLOBAL 01H 03H 0000H "PinB0_PWM" 08H 02H 0E4H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "BLINK_SLOW" 08H 02H 0C6H 00H 81H 02H 00H 00H 07H
CSTRUCTTAG 0000H 0000H 0005H 0006H 0000000AH "_Notag"
CSTRUCTMEM 42H 00000004H 00000000H "br" 02H 00H 02H
CSTRUCTMEM 42H 00000001H 00000004H "lg" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000005H "pt" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000006H "stp" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000007H "neg" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000008H "dir" 02H 00H 00H
CSTRUCTTAG 0000H 0000H 0004H 0002H 00000008H "_Notag"
CSTRUCTMEM 43H 00000004H 00000000H "quot" 02H 00H 02H
CSTRUCTMEM 43H 00000004H 00000004H "rem" 02H 00H 02H
CSTRUCTTAG 0000H 0000H 0003H 0002H 00000004H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "quot" 02H 00H 01H
CSTRUCTMEM 43H 00000002H 00000002H "rem" 02H 00H 01H
CSTRUCTTAG 0000H 0000H 0002H 000CH 00000016H "_Notag"
CSTRUCTMEM 42H 00000002H 00000000H "_Mode" 02H 00H 08H
CSTRUCTMEM 43H 00000002H 00000002H "_Handle" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 00000004H "_Buf" 04H 03H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000006H "_Bend" 04H 03H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000008H "_Next" 04H 03H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 0000000AH "_Rend" 04H 03H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 0000000CH "_Rsave" 04H 03H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 0000000EH "_Wend" 04H 03H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000010H "_Back" 05H 01H 02H 00H 00H 00H
CSTRUCTMEM 42H 00000001H 00000012H "_Cbuf" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000013H "_Nback" 02H 00H 00H
CSTRUCTMEM 43H 00000002H 00000014H "_Tmpnam" 04H 03H 00H 00H 00H
CSTRUCTTAG 0000H 0000H 0001H 0001H 00000004H "_Notag"
CSTRUCTMEM 42H 00000004H 00000000H "_Off" 02H 00H 02H
CSTRUCTTAG 0000H 0000H 0000H 0008H 00000001H "_Notag"
CSTRUCTMEM 52H 00000001H 00000000H "b0" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000001H "b1" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000002H "b2" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000003H "b3" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000004H "b4" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000005H "b5" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000006H "b6" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000007H "b7" 02H 00H 00H
CUNIONTAG 0000H 0000H 0006H 0006H 00000006H "_Notag"
CUNIONMEM 42H 00000001H "_uchar" 02H 00H 00H
CUNIONMEM 42H 00000006H "_ucharArr" 05H 01H 06H 00H 00H 00H
CUNIONMEM 42H 00000002H "_uint" 02H 00H 01H
CUNIONMEM 42H 00000006H "_uintArr" 05H 01H 03H 00H 00H 01H
CUNIONMEM 43H 00000006H "_intArr" 05H 01H 03H 00H 00H 01H
CUNIONMEM 43H 00000004H "_float" 02H 00H 03H
CTYPEDEF 0000H 0000H 43H "_Ptrdifft" 02H 00H 01H
CTYPEDEF 0000H 0000H 42H "_Sizet" 02H 00H 01H
CTYPEDEF 0000H 0000H 43H "tUartSetParam" 04H 00H 05H 05H 00H
CTYPEDEF 0000H 0000H 42H "size_t" 02H 00H 01H
CTYPEDEF 0000H 0000H 43H "cbfUart" 0AH 03H 00H 02H 5EH 00H 00H 00H 00H 00H 07H
CTYPEDEF 0000H 0000H 43H "fpos_t" 04H 00H 05H 01H 00H
CTYPEDEF 0000H 0000H 43H "cbfI2c" 0AH 03H 00H 02H 73H 00H 00H 00H 00H 00H 07H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_nf" 08H 02H 31H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_nn" 08H 02H 30H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_ff" 08H 02H 33H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_fn" 08H 02H 32H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 43H "FILE" 04H 00H 05H 02H 00H
CTYPEDEF 0000H 0000H 43H "div_t" 04H 00H 05H 03H 00H
CTYPEDEF 0000H 0000H 43H "ldiv_t" 04H 00H 05H 04H 00H
CTYPEDEF 0000H 0000H 43H "_BYTE_FIELD" 04H 00H 05H 00H 00H
CSGLOBAL 42H 0001H "KnotsUnit" 02H 00H 00H
CGLOBAL 00H 42H 0001H "_flgUartFin" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_WUFC" 02H 00H 00H
CSGLOBAL 42H 0002H "i" 02H 00H 01H
CSGLOBAL 42H 0002H "j" 02H 00H 01H
CSGLOBAL 43H 0008H "KnotsSpeed" 02H 00H 09H
CSGLOBAL 43H 0008H "Latitude" 02H 00H 09H
CSGLOBAL 43H 0008H "HomeTolerance" 02H 00H 09H
CGLOBAL 00H 43H 0004H "SensorReturn" 02H 00H 03H
CSGLOBAL 42H 0002H "Eleveation" 02H 00H 01H
CGLOBAL 01H 00H 0001H "KMX61_INC3_CFGDAT" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_TEMP_EN_CNTL_CFGDAT" 02H 00H 00H
CSGLOBAL 42H 0002H "hexToDecOffset" 02H 00H 01H
CSGLOBAL 42H 0001H "ReceiverState" 02H 00H 00H
CSGLOBAL 42H 0001H "LonDir" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_INC1_CFGDAT" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_CNTL1_CFGDAT" 02H 00H 00H
CSGLOBAL 42H 0002H "CheckPointIndex" 02H 00H 01H
CGLOBAL 01H 00H 0001H "KMX61_CNTL2_CFGDAT" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_WUFC_CFGDAT" 02H 00H 00H
CGLOBAL 01H 00H 0001H "Manufact_ID" 02H 00H 00H
CSGLOBAL 43H 0008H "Geoid" 02H 00H 09H
CSGLOBAL 42H 0004H "Date" 05H 01H 02H 00H 00H 01H
CSGLOBAL 42H 0320H "val" 05H 01H 20H 03H 00H 00H
CSGLOBAL 42H 0003H "txChar" 05H 01H 03H 00H 00H 00H
CGLOBAL 00H 43H 0006H "uniRawSensorOut" 04H 00H 06H 06H 00H
CGLOBAL 01H 42H 0001H "DoorOpen" 02H 00H 00H
CGLOBAL 01H 00H 0001H "ALS0_LSB" 02H 00H 00H
CSGLOBAL 42H 0008H "str" 05H 01H 08H 00H 00H 00H
CGLOBAL 01H 00H 0001H "ALS0_MSB" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_BTSC" 02H 00H 00H
CSGLOBAL 43H 0028H "LatDest" 05H 01H 05H 00H 00H 09H
CGLOBAL 01H 00H 0001H "KMX61_ODCNTL" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_COTR" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_STATUS_REG" 02H 00H 00H
CSGLOBAL 43H 0008H "Course" 02H 00H 09H
CSGLOBAL 42H 0018H "GSV_Info" 05H 01H 0CH 00H 00H 01H
CSGLOBAL 43H 0008H "PDOP" 02H 00H 09H
CSGLOBAL 42H 0001H "isTrueNorth" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_WUFTH" 02H 00H 00H
CSGLOBAL 42H 0001H "isBulbOn" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_STBY_REG" 02H 00H 00H
CSGLOBAL 42H 0002H "flag" 02H 00H 01H
CGLOBAL 01H 00H 0001H "KMX61_INC1" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_INC2" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_INC3" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_ACCEL_YOUT_H" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_ACCEL_YOUT_L" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_INS1" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_INS2" 02H 00H 00H
CSGLOBAL 42H 0001H "LEDFlashFlag" 02H 00H 00H
CSGLOBAL 42H 0002H "bulbIntensity" 02H 00H 01H
CGLOBAL 01H 00H 0001H "KMX61_MAG_YOUT_H" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_MAG_YOUT_L" 02H 00H 00H
CSGLOBAL 42H 0002H "fixQuality" 02H 00H 01H
CGLOBAL 01H 00H 0001H "KMX61_WUFTH_CFGDAT" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_BUF_THRESH_H" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_BUF_THRESH_L" 02H 00H 00H
CSGLOBAL 42H 0002H "checkSum" 02H 00H 01H
CSGLOBAL 43H 0008H "VDOP" 02H 00H 09H
CGLOBAL 01H 00H 0001H "KMX61_BUF_CLEAR" 02H 00H 00H
CSGLOBAL 43H 0028H "LonDest" 05H 01H 05H 00H 00H 09H
CSGLOBAL 43H 0008H "prevBulbIntensity" 02H 00H 09H
CSGLOBAL 01H 000AH "_uartSetParam" 04H 00H 05H 05H 00H
CSGLOBAL 43H 0008H "GroundSpeed" 02H 00H 09H
CSGLOBAL 42H 0002H "bulbEnable" 02H 00H 01H
CGLOBAL 01H 00H 0001H "KMX61_ODCNTL_CFGDAT" 02H 00H 00H
CSGLOBAL 42H 0001H "SensorPlatformSelection" 02H 00H 00H
CSGLOBAL 42H 0001H "LatLonValid" 02H 00H 00H
CSGLOBAL 42H 0002H "Mode" 05H 01H 02H 00H 00H 00H
CGLOBAL 01H 00H 0001H "Prox_ModeCTR" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_BTH" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_TEMP_EN_CNTL" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_CNTL1" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_CNTL2" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_XOUT_HPF_L" 02H 00H 00H
CSGLOBAL 42H 0001H "LEDChangeFlag" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_XOUT_HPF_H" 02H 00H 00H
CGLOBAL 01H 00H 0001H "ALS1_LSB" 02H 00H 00H
CSGLOBAL 42H 0002H "sigDigits" 02H 00H 01H
CSGLOBAL 42H 0001H "LatDir" 02H 00H 00H
CGLOBAL 01H 00H 0001H "ALS1_MSB" 02H 00H 00H
CGLOBAL 01H 42H 0002H "TimeFlag" 02H 00H 01H
CSGLOBAL 42H 0002H "isSettingMode" 02H 00H 01H
CSGLOBAL 42H 0002H "isNeg" 02H 00H 01H
CGLOBAL 01H 00H 0001H "KMX61_INL" 02H 00H 00H
CSGLOBAL 43H 0008H "MagDegrees" 02H 00H 09H
CGLOBAL 01H 00H 0001H "KMX61_ZOUT_HPF_L" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_ZOUT_HPF_H" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_YOUT_HPF_L" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_YOUT_HPF_H" 02H 00H 00H
CSGLOBAL 42H 0001H "MagDir" 02H 00H 00H
CSGLOBAL 42H 0002H "wordIndex" 02H 00H 01H
CGLOBAL 01H 00H 0001H "KMX61_SN_1" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_SN_2" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_SN_3" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_SN_4" 02H 00H 00H
CGLOBAL 00H 42H 0001H "_flgPB2Int" 02H 00H 00H
CSGLOBAL 42H 0001H "temp" 02H 00H 00H
CGLOBAL 00H 42H 0001H "_flgI2CFin" 02H 00H 00H
CSGLOBAL 42H 0001H "speedUnit" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_SELF_TEST_CFGDAT" 02H 00H 00H
CGLOBAL 01H 00H 0001H "Prox_PS_LSB" 02H 00H 00H
CGLOBAL 01H 00H 0001H "Prox_PS_MSB" 02H 00H 00H
CSGLOBAL 42H 0002H "Azimuth" 02H 00H 01H
CGLOBAL 01H 00H 0001H "KMX61_I2C_ADDR" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_BUF_READ" 02H 00H 00H
CSGLOBAL 43H 0008H "TrueDegrees" 02H 00H 09H
CGLOBAL 01H 00H 0001H "KMX61_TEMP_OUT_H" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_TEMP_OUT_L" 02H 00H 00H
CGLOBAL 00H 42H 0001H "RegVal" 02H 00H 00H
CGLOBAL 00H 42H 0001H "_reqNotHalt" 02H 00H 00H
CSGLOBAL 43H 0008H "Longitude" 02H 00H 09H
CSGLOBAL 43H 0008H "MSL" 02H 00H 09H
CGLOBAL 01H 00H 0001H "KMX61_ACCEL_XOUT_H" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_ACCEL_ZOUT_H" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_ACCEL_XOUT_L" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_ACCEL_ZOUT_L" 02H 00H 00H
CSGLOBAL 43H 0008H "MagneticVariation" 02H 00H 09H
CGLOBAL 01H 00H 0001H "KMX61_BUF_CTRL2_CFGDAT" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_BUF_CTRL1_CFGDAT" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_BUF_CTRL1" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_BUF_CTRL2" 02H 00H 00H
CSGLOBAL 42H 0002H "SNR" 02H 00H 01H
CSGLOBAL 42H 0014H "buffer" 05H 01H 14H 00H 00H 00H
CSGLOBAL 42H 0001H "KMHSpeed" 02H 00H 00H
CSGLOBAL 42H 0002H "GSV_index" 02H 00H 01H
CSGLOBAL 42H 0064H "word" 05H 01H 64H 00H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_BUF_STATUS_L" 02H 00H 00H
CSGLOBAL 42H 0006H "UTC" 05H 01H 03H 00H 00H 01H
CGLOBAL 01H 00H 0001H "KMX61_BUF_STATUS_H" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_MAG_XOUT_H" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_MAG_ZOUT_H" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_MAG_XOUT_L" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_MAG_ZOUT_L" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_SELF_TEST" 02H 00H 00H
CSGLOBAL 42H 0002H "PRN_num" 02H 00H 01H
CSGLOBAL 42H 0001H "SensorIntializationFlag" 02H 00H 00H
CGLOBAL 00H 42H 0002H "timer" 02H 00H 01H
CSGLOBAL 42H 0002H "numSat" 02H 00H 01H
CGLOBAL 01H 00H 0001H "KMX61_WHO_AM_I" 02H 00H 00H
CSGLOBAL 42H 0002H "GSV_numMessage" 02H 00H 01H
CGLOBAL 01H 00H 0001H "KMX61_BUF_STATUS_REG" 02H 00H 00H
CSGLOBAL 43H 0008H "HDOP" 02H 00H 09H
CSGLOBAL 42H 0018H "SV_ID" 05H 01H 0CH 00H 00H 01H
CSGLOBAL 42H 0001H "isMagNorth" 02H 00H 00H
CFILE 0001H 000007EEH "main\\ML610111.H"
CFILE 0002H 000000EEH "main\\stdio.h"
CFILE 0003H 0000007AH "main\\yvals.h"
CFILE 0004H 000000D8H "main\\stdlib.h"
CFILE 0005H 0000006FH "uart\\uart.h"
CFILE 0006H 00000027H "common\\common.h"
CFILE 0007H 00000028H "main\\mcu.h"
CFILE 0008H 00000057H "irq\\irq.h"
CFILE 0009H 00000045H "i2c\\i2c.h"
CFILE 000AH 000001B6H "timer\\timer.h"
CFILE 0000H 00000582H "main\\main.c"

	rseg $$main$main
CFUNCTION 200

_main	:
CBLOCK 200 1 279

;;{ 	 
CLINEA 0000H 0001H 0117H 0001H 0004H
CBLOCK 200 2 279

;;	Initialization(); //Ports, UART, Timers, Oscillator, Comparators, etc.
CLINEA 0000H 0001H 0118H 0002H 0047H
	bl	_Initialization

;;	temp = 0xC6u; //1100_0110
CLINEA 0000H 0001H 0119H 0002H 001AH
	mov	r0,	#0c6h
	st	r0,	NEAR _temp

;;	I2C_Write(0x38u, &Prox_ModeCTR, 1, &temp, 1); 
CLINEA 0000H 0001H 011AH 0002H 002FH
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _temp
	mov	r1,	#BYTE2 OFFSET _temp
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _Prox_ModeCTR
	mov	r3,	#BYTE2 OFFSET _Prox_ModeCTR
	mov	r0,	#038h
	bl	_I2C_Write
	add	sp,	#6 

;;	main_clrWDT(); 
CLINEA 0000H 0001H 011BH 0002H 0010H
	bl	_main_clrWDT

;;	I2C_Read(0x38u, &Manufact_ID, 1, uniRawSensorOut._ucharArr, 1); 
CLINEA 0000H 0001H 011CH 0002H 0041H
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _uniRawSensorOut
	mov	r1,	#BYTE2 OFFSET _uniRawSensorOut
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _Manufact_ID
	mov	r3,	#BYTE2 OFFSET _Manufact_ID
	mov	r0,	#038h
	bl	_I2C_Read
	add	sp,	#6 

;;	main_clrWDT(); 
CLINEA 0000H 0001H 011DH 0002H 0010H
	bl	_main_clrWDT

;;	I2C_Read(0x38u, &Prox_ModeCTR, 1, uniRawSensorOut._ucharArr, 1);
CLINEA 0000H 0001H 011EH 0002H 0041H
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _uniRawSensorOut
	mov	r1,	#BYTE2 OFFSET _uniRawSensorOut
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _Prox_ModeCTR
	mov	r3,	#BYTE2 OFFSET _Prox_ModeCTR
	mov	r0,	#038h
	bl	_I2C_Read
	add	sp,	#6 

;;		main_clrWDT(); 
CLINEA 0000H 0001H 0120H 0003H 0011H
	bl	_main_clrWDT

;;		PB4D = 1;
CLINEA 0000H 0001H 0121H 0003H 000BH
	sb	0f258h.4

;;		PA1D = 0;
CLINEA 0000H 0001H 0122H 0003H 000BH
	rb	0f250h.1

;;		PC2D = 1;
CLINEA 0000H 0001H 0123H 0003H 000BH
	sb	0f260h.2

;;		NOPms(20);
CLINEA 0000H 0001H 0124H 0003H 000CH
	mov	er0,	#20
	bl	_NOPms

;;		for(i=0;i<100;i++){
CLINEA 0000H 0001H 0125H 0003H 0015H
	mov	er0,	#0 
	st	er0,	NEAR _i
_$L31 :
CBLOCK 200 3 293

;;			main_clrWDT();  
CLINEA 0000H 0001H 0126H 0004H 0013H
	bl	_main_clrWDT

;;			NOPms(100); 
CLINEA 0000H 0001H 0127H 0004H 000FH
	mov	r0,	#064h
	mov	r1,	#00h
	bl	_NOPms
CBLOCKEND 200 3 296

;;		for(i=0;i<100;i++){
CLINEA 0000H 0000H 0125H 0003H 0015H
	l	er0,	NEAR _i
	add	er0,	#1 
	st	er0,	NEAR _i
	cmp	r0,	#064h
	cmpc	r1,	#00h
	blt	_$L31

;;		PB4D = 0;
CLINEA 0000H 0001H 0129H 0003H 000BH
	rb	0f258h.4

;;		PA1D = 1;
CLINEA 0000H 0001H 012AH 0003H 000BH
	sb	0f250h.1

;;		PC2D = 1;
CLINEA 0000H 0001H 012BH 0003H 000BH
	sb	0f260h.2

;;		NOPms(20);
CLINEA 0000H 0001H 012CH 0003H 000CH
	mov	er0,	#20
	bl	_NOPms

;;		while(flag < 30){
CLINEA 0000H 0000H 012EH 0001H 0001H
	bal	_$L121

;;		while(flag < 30){
CLINEA 0000H 0000H 012EH 0003H 0013H
_$L37 :
CBLOCK 200 4 302

;;			main_clrWDT(); 
CLINEA 0000H 0001H 012FH 0004H 0012H
	bl	_main_clrWDT

;;			I2C_Read(0x38u, &Prox_PS_LSB, 1, uniRawSensorOut._ucharArr, 1);
CLINEA 0000H 0001H 0130H 0004H 0042H
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _uniRawSensorOut
	mov	r1,	#BYTE2 OFFSET _uniRawSensorOut
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _Prox_PS_LSB
	mov	r3,	#BYTE2 OFFSET _Prox_PS_LSB
	mov	r0,	#038h
	bl	_I2C_Read
	add	sp,	#6 

;;			flag = (int)uniRawSensorOut._ucharArr[0];
CLINEA 0000H 0001H 0131H 0004H 002CH
	l	r0,	NEAR _uniRawSensorOut
	mov	r1,	#00h
	st	er0,	NEAR _flag

;;			NOPms(20);
CLINEA 0000H 0001H 0132H 0004H 000DH
	mov	er0,	#20
	bl	_NOPms
CBLOCKEND 200 4 307

;;		while(flag < 30){
CLINEA 0000H 0000H 012EH 0001H 0001H
_$L121 :
	l	er0,	NEAR _flag
	cmp	r0,	#01eh
	cmpc	r1,	#00h
	blt	_$L37

;;		main_clrWDT(); 
CLINEA 0000H 0001H 0135H 0003H 0011H
	bl	_main_clrWDT

;;		PB4D = 0;
CLINEA 0000H 0001H 0136H 0003H 000BH
	rb	0f258h.4

;;		PA1D = 1;
CLINEA 0000H 0001H 0137H 0003H 000BH
	sb	0f250h.1

;;		PC2D = 1;
CLINEA 0000H 0001H 0138H 0003H 000BH
	sb	0f260h.2

;;		NOPms(20);
CLINEA 0000H 0001H 0139H 0003H 000CH
	mov	er0,	#20
	bl	_NOPms

;;		PB4D = 1;
CLINEA 0000H 0001H 013CH 0003H 000BH
	sb	0f258h.4

;;		PA1D = 0;
CLINEA 0000H 0001H 013DH 0003H 000BH
	rb	0f250h.1

;;		PC2D = 1;
CLINEA 0000H 0001H 013EH 0003H 000BH
	sb	0f260h.2

;;		NOPms(20);
CLINEA 0000H 0001H 013FH 0003H 000CH
	mov	er0,	#20
	bl	_NOPms

;;		PB4D = 1;
CLINEA 0000H 0001H 0141H 0003H 000BH
	sb	0f258h.4

;;		PA1D = 1;
CLINEA 0000H 0001H 0142H 0003H 000BH
	sb	0f250h.1

;;		PC2D = 0;
CLINEA 0000H 0001H 0143H 0003H 000BH
	rb	0f260h.2

;;		NOPms(20);
CLINEA 0000H 0001H 0144H 0003H 000CH
	mov	er0,	#20
	bl	_NOPms

;;		PB4D = 1;
CLINEA 0000H 0001H 0146H 0003H 000BH
	sb	0f258h.4

;;		PA1D = 1;
CLINEA 0000H 0001H 0147H 0003H 000BH
	sb	0f250h.1

;;		PC2D = 1; 
CLINEA 0000H 0001H 0148H 0003H 000CH
	sb	0f260h.2

;;	txChar[0] = 1;
CLINEA 0000H 0001H 014CH 0002H 000FH
	mov	r0,	#01h
	st	r0,	NEAR _txChar

;;	txChar[1] = 1;
CLINEA 0000H 0001H 014DH 0002H 000FH
	st	r0,	NEAR _txChar+01h

;;	txChar[2] = 0;
CLINEA 0000H 0001H 014EH 0002H 000FH
	mov	r0,	#00h
	st	r0,	NEAR _txChar+02h

;;	main_clrWDT();  
CLINEA 0000H 0001H 014FH 0002H 0011H
	bl	_main_clrWDT

;;	_flgUartFin = 0;
CLINEA 0000H 0001H 0150H 0002H 0011H
	mov	r0,	#00h
	st	r0,	NEAR __flgUartFin

;;	uart_stop();  
CLINEA 0000H 0001H 0151H 0002H 000FH
	bl	_uart_stop

;;	uart_startSend(txChar, sizeof(txChar), _funcUartFin);
CLINEA 0000H 0001H 0152H 0002H 0036H
	mov	r0,	#BYTE1 OFFSET __funcUartFin
	mov	r1,	#BYTE2 OFFSET __funcUartFin
	push	er0
	mov	er2,	#3 
	mov	r0,	#BYTE1 OFFSET _txChar
	mov	r1,	#BYTE2 OFFSET _txChar
	bl	_uart_startSend
	add	sp,	#2 

;;	while(_flgUartFin != 1){
CLINEA 0000H 0000H 0153H 0001H 0001H
	bal	_$L122

;;	while(_flgUartFin != 1){
CLINEA 0000H 0000H 0153H 0002H 0019H
_$L41 :
CBLOCK 200 5 339

;;		main_clrWDT(); 
CLINEA 0000H 0001H 0154H 0003H 0011H
	bl	_main_clrWDT
CBLOCKEND 200 5 341

;;	while(_flgUartFin != 1){
CLINEA 0000H 0000H 0153H 0001H 0001H
_$L122 :
	l	r0,	NEAR __flgUartFin
	cmp	r0,	#01h
	bne	_$L41

;;	bulbIntensity = 0;
CLINEA 0000H 0001H 0156H 0002H 0013H
	mov	er0,	#0 
	st	er0,	NEAR _bulbIntensity

;;	i = 0;
CLINEA 0000H 0001H 0157H 0002H 0007H
	st	er0,	NEAR _i

;;	while(1){ 
CLINEA 0000H 0001H 0158H 0002H 000BH
	b	_$L43
_$L45 :
CBLOCK 200 6 344

;;			main_clrWDT(); 
CLINEA 0000H 0001H 0159H 0004H 0012H
	bl	_main_clrWDT

;;			I2C_Read(0x38u, &Prox_PS_LSB, 1, uniRawSensorOut._ucharArr, 1);
CLINEA 0000H 0001H 015AH 0004H 0042H
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _uniRawSensorOut
	mov	r1,	#BYTE2 OFFSET _uniRawSensorOut
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _Prox_PS_LSB
	mov	r3,	#BYTE2 OFFSET _Prox_PS_LSB
	mov	r0,	#038h
	bl	_I2C_Read
	add	sp,	#6 

;;			main_clrWDT(); 
CLINEA 0000H 0001H 015BH 0004H 0012H
	bl	_main_clrWDT

;;			if((int)uniRawSensorOut._ucharArr[0] > 10){
CLINEA 0000H 0001H 015CH 0004H 002EH
	l	r0,	NEAR _uniRawSensorOut
	cmp	r0,	#0ah
	bgt	_$M1
	b	_$L74
_$M1 :
CBLOCK 200 7 348

;;				i = 0;
CLINEA 0000H 0001H 015DH 0005H 000AH
	mov	er0,	#0 
	st	er0,	NEAR _i

;;				BLINK();
CLINEA 0000H 0001H 015EH 0005H 000CH
	bl	_BLINK

;;				main_clrWDT();  
CLINEA 0000H 0001H 015FH 0005H 0014H
	bl	_main_clrWDT

;;			    while((int)uniRawSensorOut._ucharArr[0] > 5){ 
CLINEA 0000H 0000H 0161H 0001H 0001H
	bal	_$L53

;;			    while((int)uniRawSensorOut._ucharArr[0] > 5){ 
CLINEA 0000H 0000H 0161H 0008H 0035H
_$L51 :
CBLOCK 200 8 353

;;					main_clrWDT(); 
CLINEA 0000H 0001H 0162H 0006H 0014H
	bl	_main_clrWDT

;;					I2C_Read(0x38u, &Prox_PS_LSB, 1, uniRawSensorOut._ucharArr, 1);
CLINEA 0000H 0001H 0163H 0006H 0044H
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _uniRawSensorOut
	mov	r1,	#BYTE2 OFFSET _uniRawSensorOut
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _Prox_PS_LSB
	mov	r3,	#BYTE2 OFFSET _Prox_PS_LSB
	mov	r0,	#038h
	bl	_I2C_Read
	add	sp,	#6 

;;				    BLINK(); 
CLINEA 0000H 0001H 0164H 0009H 0011H
	bl	_BLINK

;;					i++; 
CLINEA 0000H 0000H 0165H 0006H 000AH
	l	er0,	NEAR _i
	add	er0,	#1 
	st	er0,	NEAR _i

;;					if(i>50)
CLINEA 0000H 0001H 0166H 0006H 000DH
	cmp	r0,	#032h
	cmpc	r1,	#00h
	ble	_$L53

;;						uniRawSensorOut._ucharArr[0] = 0;
CLINEA 0000H 0001H 0167H 0007H 0027H
	mov	r0,	#00h
	st	r0,	NEAR _uniRawSensorOut
_$L53 :
CBLOCKEND 200 8 360

;;			    while((int)uniRawSensorOut._ucharArr[0] > 5){ 
CLINEA 0000H 0000H 0161H 0000H 0000H
	l	r0,	NEAR _uniRawSensorOut
	cmp	r0,	#05h
	bgt	_$L51

;;				if(i>50){
CLINEA 0000H 0001H 0169H 0005H 000DH
	l	er0,	NEAR _i
	cmp	r0,	#032h
	cmpc	r1,	#00h
	bgt	_$M2
	b	_$L55
_$M2 :
CBLOCK 200 9 361

;;					BLINK_SLOW(); 
CLINEA 0000H 0001H 016AH 0006H 0013H
	bl	_BLINK_SLOW

;;					txChar[0] = 'c'; 
CLINEA 0000H 0001H 016CH 0006H 0016H
	mov	r0,	#063h
	st	r0,	NEAR _txChar

;;					main_clrWDT();  
CLINEA 0000H 0001H 016DH 0006H 0015H
	bl	_main_clrWDT

;;					_flgUartFin = 0;
CLINEA 0000H 0001H 016EH 0006H 0015H
	mov	r0,	#00h
	st	r0,	NEAR __flgUartFin

;;					uart_stop();  
CLINEA 0000H 0001H 016FH 0006H 0013H
	bl	_uart_stop

;;					uart_startSend(txChar, sizeof(txChar), _funcUartFin);
CLINEA 0000H 0001H 0170H 0006H 003AH
	mov	r0,	#BYTE1 OFFSET __funcUartFin
	mov	r1,	#BYTE2 OFFSET __funcUartFin
	push	er0
	mov	er2,	#3 
	mov	r0,	#BYTE1 OFFSET _txChar
	mov	r1,	#BYTE2 OFFSET _txChar
	bl	_uart_startSend
	add	sp,	#2 

;;					while(_flgUartFin != 1){
CLINEA 0000H 0000H 0171H 0001H 0001H
	bal	_$L123

;;					while(_flgUartFin != 1){
CLINEA 0000H 0000H 0171H 0006H 001DH
_$L59 :
CBLOCK 200 10 369

;;						main_clrWDT(); 
CLINEA 0000H 0001H 0172H 0007H 0015H
	bl	_main_clrWDT
CBLOCKEND 200 10 371

;;					while(_flgUartFin != 1){
CLINEA 0000H 0000H 0171H 0001H 0001H
_$L123 :
	l	r0,	NEAR __flgUartFin
	cmp	r0,	#01h
	bne	_$L59

;;					i=0;
CLINEA 0000H 0001H 0175H 0006H 0009H
	mov	er0,	#0 
	st	er0,	NEAR _i

;;					main_clrWDT(); 
CLINEA 0000H 0001H 0176H 0006H 0014H
	bl	_main_clrWDT

;;					I2C_Read(0x38u, &Prox_PS_LSB, 1, uniRawSensorOut._ucharArr, 1);
CLINEA 0000H 0001H 0177H 0006H 0044H
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _uniRawSensorOut
	mov	r1,	#BYTE2 OFFSET _uniRawSensorOut
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _Prox_PS_LSB
	mov	r3,	#BYTE2 OFFSET _Prox_PS_LSB
	mov	r0,	#038h
	bl	_I2C_Read
	add	sp,	#6 

;;					while((int)uniRawSensorOut._ucharArr[0] < 10){
CLINEA 0000H 0000H 0178H 0001H 0001H
	bal	_$L124

;;					while((int)uniRawSensorOut._ucharArr[0] < 10){
CLINEA 0000H 0000H 0178H 0006H 0033H
_$L63 :
CBLOCK 200 11 376

;;						main_clrWDT(); 
CLINEA 0000H 0001H 0179H 0007H 0015H
	bl	_main_clrWDT

;;						I2C_Read(0x38u, &Prox_PS_LSB, 1, uniRawSensorOut._ucharArr, 1);
CLINEA 0000H 0001H 017AH 0007H 0045H
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _uniRawSensorOut
	mov	r1,	#BYTE2 OFFSET _uniRawSensorOut
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _Prox_PS_LSB
	mov	r3,	#BYTE2 OFFSET _Prox_PS_LSB
	mov	r0,	#038h
	bl	_I2C_Read
	add	sp,	#6 

;;						main_clrWDT(); 
CLINEA 0000H 0001H 017CH 0007H 0015H
	bl	_main_clrWDT

;;						PB4D = 0;
CLINEA 0000H 0001H 017DH 0007H 000FH
	rb	0f258h.4

;;						PA1D = 1;
CLINEA 0000H 0001H 017EH 0007H 000FH
	sb	0f250h.1

;;						PC2D = 1;
CLINEA 0000H 0001H 017FH 0007H 000FH
	sb	0f260h.2

;;						NOPms(20);
CLINEA 0000H 0001H 0180H 0007H 0010H
	mov	er0,	#20
	bl	_NOPms

;;						PB4D = 1;
CLINEA 0000H 0001H 0183H 0007H 000FH
	sb	0f258h.4

;;						PA1D = 0;
CLINEA 0000H 0001H 0184H 0007H 000FH
	rb	0f250h.1

;;						PC2D = 1;
CLINEA 0000H 0001H 0185H 0007H 000FH
	sb	0f260h.2

;;						NOPms(20);
CLINEA 0000H 0001H 0186H 0007H 0010H
	mov	er0,	#20
	bl	_NOPms

;;						PB4D = 1;
CLINEA 0000H 0001H 0188H 0007H 000FH
	sb	0f258h.4

;;						PA1D = 1;
CLINEA 0000H 0001H 0189H 0007H 000FH
	sb	0f250h.1

;;						PC2D = 0;
CLINEA 0000H 0001H 018AH 0007H 000FH
	rb	0f260h.2

;;						NOPms(20);
CLINEA 0000H 0001H 018BH 0007H 0010H
	mov	er0,	#20
	bl	_NOPms

;;						PB4D = 1;
CLINEA 0000H 0001H 018DH 0007H 000FH
	sb	0f258h.4

;;						PA1D = 1;
CLINEA 0000H 0001H 018EH 0007H 000FH
	sb	0f250h.1

;;						PC2D = 1; 
CLINEA 0000H 0001H 018FH 0007H 0010H
	sb	0f260h.2

;;						NOPms(100); 
CLINEA 0000H 0001H 0191H 0007H 0012H
	mov	r0,	#064h
	mov	r1,	#00h
	bl	_NOPms
CBLOCKEND 200 11 402

;;					while((int)uniRawSensorOut._ucharArr[0] < 10){
CLINEA 0000H 0000H 0178H 0001H 0001H
_$L124 :
	l	r0,	NEAR _uniRawSensorOut
	cmp	r0,	#0ah
	blt	_$L63

;;					txChar[0] = 'd';
CLINEA 0000H 0001H 0194H 0006H 0015H
	mov	r0,	#064h
	st	r0,	NEAR _txChar

;;					main_clrWDT();  
CLINEA 0000H 0001H 0195H 0006H 0015H
	bl	_main_clrWDT

;;					_flgUartFin = 0;
CLINEA 0000H 0001H 0196H 0006H 0015H
	mov	r0,	#00h
	st	r0,	NEAR __flgUartFin

;;					uart_stop();  
CLINEA 0000H 0001H 0197H 0006H 0013H
	bl	_uart_stop

;;					uart_startSend(txChar, sizeof(txChar), _funcUartFin);
CLINEA 0000H 0001H 0198H 0006H 003AH
	mov	r0,	#BYTE1 OFFSET __funcUartFin
	mov	r1,	#BYTE2 OFFSET __funcUartFin
	push	er0
	mov	er2,	#3 
	mov	r0,	#BYTE1 OFFSET _txChar
	mov	r1,	#BYTE2 OFFSET _txChar
	bl	_uart_startSend
	add	sp,	#2 

;;					while(_flgUartFin != 1){
CLINEA 0000H 0000H 0199H 0001H 0001H
	bal	_$L125

;;					while(_flgUartFin != 1){
CLINEA 0000H 0000H 0199H 0006H 001DH
_$L67 :
CBLOCK 200 12 409

;;						main_clrWDT(); 
CLINEA 0000H 0001H 019AH 0007H 0015H
	bl	_main_clrWDT
CBLOCKEND 200 12 411

;;					while(_flgUartFin != 1){
CLINEA 0000H 0000H 0199H 0001H 0001H
_$L125 :
	l	r0,	NEAR __flgUartFin
	cmp	r0,	#01h
	bne	_$L67

;;					BLINK_SLOW();   
CLINEA 0000H 0001H 019DH 0006H 0015H
	bl	_BLINK_SLOW

;;				}else{   
CLINEA 0000H 0000H 019EH 0005H 000DH
	bal	_$L72
_$L55 :
CBLOCK 200 13 414

;;					if(txChar[0] != 'a'){
CLINEA 0000H 0001H 019FH 0006H 001AH
	l	r0,	NEAR _txChar
	cmp	r0,	#061h
	beq	_$L70
CBLOCK 200 14 415

;;						txChar[0] = 'a'; 
CLINEA 0000H 0001H 01A0H 0007H 0017H
	mov	r0,	#061h
	st	r0,	NEAR _txChar
CBLOCKEND 200 14 417

;;					}else{
CLINEA 0000H 0000H 01A1H 0006H 000BH
	bal	_$L72
_$L70 :
CBLOCK 200 15 417

;;						txChar[0] = 'b';  
CLINEA 0000H 0001H 01A2H 0007H 0018H
	mov	r0,	#062h
	st	r0,	NEAR _txChar
CBLOCKEND 200 15 419

;;					}
CLINEA 0000H 0000H 01A3H 0006H 0006H
_$L72 :
CBLOCKEND 200 13 420

;;				main_clrWDT();  
CLINEA 0000H 0001H 01A6H 0005H 0014H
	bl	_main_clrWDT
CBLOCKEND 200 9 533

;;				_flgUartFin = 0;
CLINEA 0000H 0001H 01A7H 0005H 0014H
	mov	r0,	#00h
	st	r0,	NEAR __flgUartFin

;;				uart_stop();  
CLINEA 0000H 0001H 01A8H 0005H 0012H
	bl	_uart_stop

;;				uart_startSend(txChar, sizeof(txChar), _funcUartFin);
CLINEA 0000H 0001H 01A9H 0005H 0039H
	mov	r0,	#BYTE1 OFFSET __funcUartFin
	mov	r1,	#BYTE2 OFFSET __funcUartFin
	push	er0
	mov	er2,	#3 
	mov	r0,	#BYTE1 OFFSET _txChar
	mov	r1,	#BYTE2 OFFSET _txChar
	bl	_uart_startSend
	add	sp,	#2 

;;				while(_flgUartFin != 1){
CLINEA 0000H 0000H 01AAH 0001H 0001H
	bal	_$L126

;;				while(_flgUartFin != 1){
CLINEA 0000H 0000H 01AAH 0005H 001CH
_$L75 :
CBLOCK 200 16 426

;;					main_clrWDT(); 
CLINEA 0000H 0001H 01ABH 0006H 0014H
	bl	_main_clrWDT
CBLOCKEND 200 16 428

;;				while(_flgUartFin != 1){
CLINEA 0000H 0000H 01AAH 0001H 0001H
_$L126 :
	l	r0,	NEAR __flgUartFin
	cmp	r0,	#01h
	bne	_$L75

;;				}   
CLINEA 0000H 0000H 01ACH 0005H 0008H
_$L74 :
CBLOCKEND 200 7 429

;;			I2C_Read(0x38u, &Prox_PS_MSB, 1, uniRawSensorOut._ucharArr, 1);
CLINEA 0000H 0001H 01AEH 0004H 0042H
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _uniRawSensorOut
	mov	r1,	#BYTE2 OFFSET _uniRawSensorOut
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _Prox_PS_MSB
	mov	r3,	#BYTE2 OFFSET _Prox_PS_MSB
	mov	r0,	#038h
	bl	_I2C_Read
	add	sp,	#6 

;;			main_clrWDT(); 
CLINEA 0000H 0001H 01AFH 0004H 0012H
	bl	_main_clrWDT

;;			I2C_Read(0x38u, &ALS0_LSB, 1, uniRawSensorOut._ucharArr, 1);
CLINEA 0000H 0001H 01B0H 0004H 003FH
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _uniRawSensorOut
	mov	r1,	#BYTE2 OFFSET _uniRawSensorOut
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _ALS0_LSB
	mov	r3,	#BYTE2 OFFSET _ALS0_LSB
	mov	r0,	#038h
	bl	_I2C_Read
	add	sp,	#6 

;;			main_clrWDT(); 
CLINEA 0000H 0001H 01B1H 0004H 0012H
	bl	_main_clrWDT

;;			I2C_Read(0x38u, &ALS0_MSB, 1, uniRawSensorOut._ucharArr, 1);
CLINEA 0000H 0001H 01B2H 0004H 003FH
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _uniRawSensorOut
	mov	r1,	#BYTE2 OFFSET _uniRawSensorOut
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _ALS0_MSB
	mov	r3,	#BYTE2 OFFSET _ALS0_MSB
	mov	r0,	#038h
	bl	_I2C_Read
	add	sp,	#6 

;;			main_clrWDT(); 
CLINEA 0000H 0001H 01B3H 0004H 0012H
	bl	_main_clrWDT

;;			I2C_Read(0x38u, &ALS1_LSB, 1, uniRawSensorOut._ucharArr, 1);
CLINEA 0000H 0001H 01B4H 0004H 003FH
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _uniRawSensorOut
	mov	r1,	#BYTE2 OFFSET _uniRawSensorOut
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _ALS1_LSB
	mov	r3,	#BYTE2 OFFSET _ALS1_LSB
	mov	r0,	#038h
	bl	_I2C_Read
	add	sp,	#6 

;;			main_clrWDT(); 
CLINEA 0000H 0001H 01B5H 0004H 0012H
	bl	_main_clrWDT

;;			I2C_Read(0x38u, &ALS1_MSB, 1, uniRawSensorOut._ucharArr, 1); 
CLINEA 0000H 0001H 01B6H 0004H 0040H
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _uniRawSensorOut
	mov	r1,	#BYTE2 OFFSET _uniRawSensorOut
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _ALS1_MSB
	mov	r3,	#BYTE2 OFFSET _ALS1_MSB
	mov	r0,	#038h
	bl	_I2C_Read
	add	sp,	#6 
CBLOCKEND 200 6 439

;;	}
CLINEA 0000H 0000H 01B7H 0002H 0002H
_$L43 :

;;	while(1){ 
CLINEA 0000H 0000H 0158H 0000H 0000H
	b	_$L45

;;	while(1){ 
CBLOCKEND 200 2 533

;;							break;
CBLOCKEND 200 23 480

;;							break;
CBLOCKEND 200 25 495
CBLOCKEND 200 1 533
CFUNCTIONEND 200


	rseg $$SWEEP_RGB$main
CFUNCTION 199

_SWEEP_RGB	:
CBLOCK 199 1 536

;;void SWEEP_RGB(){ 
CLINEA 0000H 0001H 0218H 0001H 0012H
CBLOCK 199 2 536
CBLOCKEND 199 2 537

;;}
CLINEA 0000H 0001H 0219H 0001H 0001H
	rt
CBLOCKEND 199 1 537
CFUNCTIONEND 199


	rseg $$BLINK_SLOW$main
CFUNCTION 198

_BLINK_SLOW	:
CBLOCK 198 1 542

;;void BLINK_SLOW(void){
CLINEA 0000H 0001H 021EH 0001H 0016H
	push	lr
CBLOCK 198 2 542
CRET 0000H

;;		main_clrWDT(); 
CLINEA 0000H 0001H 021FH 0003H 0011H
	bl	_main_clrWDT

;;		PB4D = 0;
CLINEA 0000H 0001H 0220H 0003H 000BH
	rb	0f258h.4

;;		PA1D = 1;
CLINEA 0000H 0001H 0221H 0003H 000BH
	sb	0f250h.1

;;		PC2D = 1;
CLINEA 0000H 0001H 0222H 0003H 000BH
	sb	0f260h.2

;;		NOPms(100);
CLINEA 0000H 0001H 0223H 0003H 000DH
	mov	r0,	#064h
	mov	r1,	#00h
	bl	_NOPms

;;		NOPms(100);
CLINEA 0000H 0001H 0224H 0003H 000DH
	mov	r0,	#064h
	mov	r1,	#00h
	bl	_NOPms

;;		NOPms(100);
CLINEA 0000H 0001H 0225H 0003H 000DH
	mov	r0,	#064h
	mov	r1,	#00h
	bl	_NOPms

;;		NOPms(100);
CLINEA 0000H 0001H 0226H 0003H 000DH
	mov	r0,	#064h
	mov	r1,	#00h
	bl	_NOPms

;;		NOPms(100);
CLINEA 0000H 0001H 0227H 0003H 000DH
	mov	r0,	#064h
	mov	r1,	#00h
	bl	_NOPms

;;		PB4D = 1;
CLINEA 0000H 0001H 0229H 0003H 000BH
	sb	0f258h.4

;;		PA1D = 0;
CLINEA 0000H 0001H 022AH 0003H 000BH
	rb	0f250h.1

;;		PC2D = 1;
CLINEA 0000H 0001H 022BH 0003H 000BH
	sb	0f260h.2

;;		NOPms(100);
CLINEA 0000H 0001H 022CH 0003H 000DH
	mov	r0,	#064h
	mov	r1,	#00h
	bl	_NOPms

;;		NOPms(100);
CLINEA 0000H 0001H 022DH 0003H 000DH
	mov	r0,	#064h
	mov	r1,	#00h
	bl	_NOPms

;;		NOPms(100);
CLINEA 0000H 0001H 022EH 0003H 000DH
	mov	r0,	#064h
	mov	r1,	#00h
	bl	_NOPms

;;		NOPms(100);
CLINEA 0000H 0001H 022FH 0003H 000DH
	mov	r0,	#064h
	mov	r1,	#00h
	bl	_NOPms

;;		NOPms(100);
CLINEA 0000H 0001H 0230H 0003H 000DH
	mov	r0,	#064h
	mov	r1,	#00h
	bl	_NOPms

;;		PB4D = 1;
CLINEA 0000H 0001H 0232H 0003H 000BH
	sb	0f258h.4

;;		PA1D = 1;
CLINEA 0000H 0001H 0233H 0003H 000BH
	sb	0f250h.1

;;		PC2D = 0;
CLINEA 0000H 0001H 0234H 0003H 000BH
	rb	0f260h.2

;;		NOPms(100);
CLINEA 0000H 0001H 0235H 0003H 000DH
	mov	r0,	#064h
	mov	r1,	#00h
	bl	_NOPms

;;		NOPms(100);
CLINEA 0000H 0001H 0236H 0003H 000DH
	mov	r0,	#064h
	mov	r1,	#00h
	bl	_NOPms

;;		NOPms(100);
CLINEA 0000H 0001H 0237H 0003H 000DH
	mov	r0,	#064h
	mov	r1,	#00h
	bl	_NOPms

;;		NOPms(100);
CLINEA 0000H 0001H 0238H 0003H 000DH
	mov	r0,	#064h
	mov	r1,	#00h
	bl	_NOPms

;;		NOPms(100);
CLINEA 0000H 0001H 0239H 0003H 000DH
	mov	r0,	#064h
	mov	r1,	#00h
	bl	_NOPms

;;		PB4D = 1;
CLINEA 0000H 0001H 023BH 0003H 000BH
	sb	0f258h.4

;;		PA1D = 1;
CLINEA 0000H 0001H 023CH 0003H 000BH
	sb	0f250h.1

;;		PC2D = 1;
CLINEA 0000H 0001H 023DH 0003H 000BH
	sb	0f260h.2

;;		NOPms(100);
CLINEA 0000H 0001H 023EH 0003H 000DH
	mov	r0,	#064h
	mov	r1,	#00h
	bl	_NOPms

;;		NOPms(100);
CLINEA 0000H 0001H 023FH 0003H 000DH
	mov	r0,	#064h
	mov	r1,	#00h
	bl	_NOPms

;;		NOPms(100);
CLINEA 0000H 0001H 0240H 0003H 000DH
	mov	r0,	#064h
	mov	r1,	#00h
	bl	_NOPms

;;		NOPms(100);
CLINEA 0000H 0001H 0241H 0003H 000DH
	mov	r0,	#064h
	mov	r1,	#00h
	bl	_NOPms

;;		NOPms(100);
CLINEA 0000H 0001H 0242H 0003H 000DH
	mov	r0,	#064h
	mov	r1,	#00h
	bl	_NOPms
CBLOCKEND 198 2 579

;;}
CLINEA 0000H 0001H 0243H 0001H 0001H
	pop	pc
CBLOCKEND 198 1 579
CFUNCTIONEND 198


	rseg $$BLINK$main
CFUNCTION 197

_BLINK	:
CBLOCK 197 1 582

;;void BLINK(void){
CLINEA 0000H 0001H 0246H 0001H 0011H
	push	lr
CBLOCK 197 2 582
CRET 0000H

;;		main_clrWDT(); 
CLINEA 0000H 0001H 0247H 0003H 0011H
	bl	_main_clrWDT

;;		PB4D = 0;
CLINEA 0000H 0001H 0248H 0003H 000BH
	rb	0f258h.4

;;		PA1D = 1;
CLINEA 0000H 0001H 0249H 0003H 000BH
	sb	0f250h.1

;;		PC2D = 1;
CLINEA 0000H 0001H 024AH 0003H 000BH
	sb	0f260h.2

;;		NOPms(20);
CLINEA 0000H 0001H 024BH 0003H 000CH
	mov	er0,	#20
	bl	_NOPms

;;		PB4D = 1;
CLINEA 0000H 0001H 024DH 0003H 000BH
	sb	0f258h.4

;;		PA1D = 0;
CLINEA 0000H 0001H 024EH 0003H 000BH
	rb	0f250h.1

;;		PC2D = 1;
CLINEA 0000H 0001H 024FH 0003H 000BH
	sb	0f260h.2

;;		NOPms(20);
CLINEA 0000H 0001H 0250H 0003H 000CH
	mov	er0,	#20
	bl	_NOPms

;;		PB4D = 1;
CLINEA 0000H 0001H 0252H 0003H 000BH
	sb	0f258h.4

;;		PA1D = 1;
CLINEA 0000H 0001H 0253H 0003H 000BH
	sb	0f250h.1

;;		PC2D = 0;
CLINEA 0000H 0001H 0254H 0003H 000BH
	rb	0f260h.2

;;		NOPms(20);
CLINEA 0000H 0001H 0255H 0003H 000CH
	mov	er0,	#20
	bl	_NOPms

;;		PB4D = 1;
CLINEA 0000H 0001H 0257H 0003H 000BH
	sb	0f258h.4

;;		PA1D = 1;
CLINEA 0000H 0001H 0258H 0003H 000BH
	sb	0f250h.1

;;		PC2D = 1;
CLINEA 0000H 0001H 0259H 0003H 000BH
	sb	0f260h.2
CBLOCKEND 197 2 602

;;}
CLINEA 0000H 0001H 025AH 0001H 0001H
	pop	pc
CBLOCKEND 197 1 602
CFUNCTIONEND 197


	rseg $$GetUART_Command$main
CFUNCTION 204

_GetUART_Command	:
CBLOCK 204 1 604

;;void GetUART_Command(void){
CLINEA 0000H 0001H 025CH 0001H 001BH
	push	lr
	push	xr4
CBLOCK 204 2 604
CRET 0004H

;;		val[0] = 0;
CLINEA 0000H 0001H 025DH 0003H 000DH
	mov	r0,	#00h
	st	r0,	NEAR _val

;;		uart_stop();
CLINEA 0000H 0001H 025EH 0003H 000EH
	bl	_uart_stop

;;		uart_startReceive(val, 1, _funcUartFin); 
CLINEA 0000H 0001H 025FH 0003H 002BH
	mov	r0,	#BYTE1 OFFSET __funcUartFin
	mov	r1,	#BYTE2 OFFSET __funcUartFin
	push	er0
	mov	er2,	#1 
	mov	r0,	#BYTE1 OFFSET _val
	mov	r1,	#BYTE2 OFFSET _val
	bl	_uart_startReceive
	add	sp,	#2 

;;		prevBulbIntensity = (prevBulbIntensity * 1.22437);
CLINEA 0000H 0001H 0260H 0003H 0034H
	lea	OFFSET _prevBulbIntensity
	l	qr0,	[ea]
	push	qr0
	mov	r0,	#09eh
	mov	r1,	#041h
	mov	r2,	#043h
	mov	r3,	#0ffh
	mov	r4,	#04h
	mov	r5,	#097h
	mov	r6,	#0f3h
	mov	r7,	#03fh
	push	qr0
	bl	__dmulu8sw
	add	sp,	#8 
	pop	qr0
	st	qr0,	[ea]

;;		NOPms(10);  
CLINEA 0000H 0001H 0261H 0003H 000EH
	mov	er0,	#10
	bl	_NOPms

;;		if(val[0]){
CLINEA 0000H 0001H 0262H 0003H 000DH
	l	r0,	NEAR _val
	beq	_$L140
CBLOCK 204 3 610

;;		    if(prevBulbIntensity > 230.0){
CLINEA 0000H 0001H 0263H 0007H 0024H
	lea	OFFSET _prevBulbIntensity
	l	qr0,	[ea]
	push	qr0
	mov	er0,	#0 
	mov	er2,	#0 
	mov	r4,	#00h
	mov	r5,	#0c0h
	mov	r6,	#06ch
	mov	r7,	#040h
	push	qr0
	bl	__dcmpu8sw
	add	sp,	#16
	mov	psw,	r0
	ble	_$L133
CBLOCK 204 4 611

;;				write(0,"Bulb Fully On\n",sizeof("Bulb Fully On\n"));
CLINEA 0000H 0001H 0264H 0005H 0039H
	mov	er0,	#15
	push	er0
	mov	r2,	#BYTE1 OFFSET $$S135
	mov	r3,	#BYTE2 OFFSET $$S135
	mov	er0,	#0 
	bl	_write
	add	sp,	#2 

;;			else if(prevBulbIntensity == 0){
CLINEA 0000H 0001H 0266H 0004H 0023H
	bal	_$L140
_$L133 :
	lea	OFFSET _prevBulbIntensity
	l	qr0,	[ea]
	push	qr0
	mov	er0,	#0 
	mov	er2,	#0 
	push	xr0
	push	xr0
	bl	__dcmpu8sw
	add	sp,	#16
	mov	psw,	r0
	bne	_$L137
CBLOCK 204 5 614

;;				write(0,"Bulb is Off\n",sizeof("Bulb is Off\n"));
CLINEA 0000H 0001H 0267H 0005H 0035H
	mov	er0,	#13
	push	er0
	mov	r2,	#BYTE1 OFFSET $$S139
	mov	r3,	#BYTE2 OFFSET $$S139
	mov	er0,	#0 
	bl	_write
	add	sp,	#2 
CBLOCKEND 204 5 616

;;			else{
CLINEA 0000H 0001H 0269H 0004H 0008H
	bal	_$L140
_$L137 :
CBLOCK 204 6 617

;;				write(0,val,sizeof(val));
CLINEA 0000H 0001H 026BH 0005H 001DH
	mov	r0,	#020h
	mov	r1,	#03h
	push	er0
	mov	r2,	#BYTE1 OFFSET _val
	mov	r3,	#BYTE2 OFFSET _val
	mov	er0,	#0 
	bl	_write
	add	sp,	#2 
CBLOCKEND 204 6 621

;;			}
CLINEA 0000H 0000H 026DH 0004H 0004H
_$L140 :
CBLOCKEND 204 3 622
CBLOCKEND 204 4 623
CBLOCKEND 204 2 623

;;}
CLINEA 0000H 0001H 026FH 0001H 0001H
	pop	xr4
	pop	pc
CBLOCKEND 204 1 623
CFUNCTIONEND 204


	rseg $$main_clrWDT$main
CFUNCTION 177

_main_clrWDT	:
CBLOCK 177 1 649

;;{
CLINEA 0000H 0001H 0289H 0001H 0001H
CBLOCK 177 2 649

;;	do {
CLINEA 0000H 0001H 028AH 0002H 0005H
_$L144 :
CBLOCK 177 3 650

;;		WDTCON = 0x5Au;
CLINEA 0000H 0001H 028BH 0003H 0011H
	mov	r0,	#05ah
	st	r0,	0f00eh
CBLOCKEND 177 3 652

;;	} while (WDP != 1);
CLINEA 0000H 0000H 028CH 0002H 0014H
	tb	0f00eh.0
	beq	_$L144

;;	WDTCON = 0xA5u;
CLINEA 0000H 0001H 028DH 0002H 0010H
	mov	r0,	#0a5h
	st	r0,	0f00eh
CBLOCKEND 177 2 654

;;}
CLINEA 0000H 0001H 028EH 0001H 0001H
	rt
CBLOCKEND 177 1 654
CFUNCTIONEND 177


	rseg $$NOP1000$main
CFUNCTION 194

_NOP1000	:
CBLOCK 194 1 664

;;{
CLINEA 0000H 0001H 0298H 0001H 0001H
CBLOCK 194 2 664
CLOCAL 4AH 0002H 0000H 0002H "ONCNT" 02H 00H 01H
CBLOCKEND 194 2 671

;;}
CLINEA 0000H 0001H 029FH 0001H 0001H
	rt
CBLOCKEND 194 1 671
CFUNCTIONEND 194


	rseg $$NOPms$main
CFUNCTION 195

_NOPms	:
CBLOCK 195 1 687

;;{
CLINEA 0000H 0001H 02AFH 0001H 0001H
	push	lr
	push	xr4
	push	bp
	push	er8
	mov	er8,	er0
CBLOCK 195 2 687
CRET 0008H
CARGUMENT 46H 0002H 0028H "ms" 02H 00H 01H
CLOCAL 46H 0002H 002AH 0002H "timerThres" 02H 00H 01H
CLOCAL 46H 0001H 001AH 0002H "TimeFlag" 02H 00H 00H
CLOCAL 46H 0002H 0026H 0002H "TempSec" 02H 00H 01H
CLOCAL 46H 0002H 0024H 0002H "timer" 02H 00H 01H
CLOCAL 4AH 0002H 0000H 0002H "timertest" 02H 00H 01H

;;	TempSec = ms;
CLINEA 0000H 0001H 02B6H 0002H 000EH
	mov	er4,	er0

;;	TimeFlag = 0;
CLINEA 0000H 0001H 02B7H 0002H 000EH
	mov	r6,	#00h

;;	tm_init(TM_CH_NO_AB);
CLINEA 0000H 0001H 02B9H 0002H 0016H
	mov	r0,	#01h
	bl	_tm_init

;;	tm_setABSource(TM_CS_HTBCLK);
CLINEA 0000H 0000H 018BH 0002H 0015H
	sb	0f8eah.0

;;	tm_setABSource(TM_CS_HTBCLK);
CLINEA 0000H 0000H 018CH 0002H 001AH
	rb	0f8eah.1

;;	tm_setABData(0xffff);
CLINEA 0000H 0000H 0155H 0002H 0025H
	mov	r0,	#0ffh
	st	r0,	0f8e8h

;;	tm_setABData(0xffff);
CLINEA 0000H 0000H 0156H 0002H 0023H
	st	r0,	0f8ech

;;	if(ms < 128){
CLINEA 0000H 0001H 02BDH 0002H 000EH
	mov	er0,	er8
	cmp	r8,	#080h
	cmpc	r9,	#00h
	bge	_$L152
CBLOCK 195 3 701

;;		timerThres = 0x1FF * ms;
CLINEA 0000H 0001H 02BEH 0003H 001AH
	sllc	r1,	#07h
	sll	r0,	#07h
	sllc	r1,	#02h
	sll	r0,	#02h
	sub	r0,	r8
	subc	r1,	r9
	mov	bp,	er0

;;		TimeFlag = 0;
CLINEA 0000H 0001H 02BFH 0003H 000FH
CBLOCKEND 195 3 704

;;	}
CLINEA 0000H 0000H 02C0H 0002H 0002H
_$L152 :

;;	if(ms == 128){
CLINEA 0000H 0001H 02C1H 0002H 000FH
	cmp	r8,	#080h
	cmpc	r9,	#00h
	bne	_$L154
CBLOCK 195 4 705

;;		timerThres = 0xFFFF;
CLINEA 0000H 0001H 02C2H 0003H 0016H
	mov	bp,	#-1

;;		TimeFlag = 0;
CLINEA 0000H 0001H 02C3H 0003H 000FH
	mov	r6,	#00h
CBLOCKEND 195 4 708

;;	}
CLINEA 0000H 0000H 02C4H 0002H 0002H
_$L154 :

;;	if(ms > 128){
CLINEA 0000H 0001H 02C5H 0002H 000EH
	cmp	r8,	#080h
	cmpc	r9,	#00h
	ble	_$L164
CBLOCK 195 5 709

;;		while(TempSec > 128){
CLINEA 0000H 0000H 02C6H 0001H 0001H
	bal	_$L174

;;		while(TempSec > 128){
CLINEA 0000H 0000H 02C6H 0003H 0017H
_$L160 :
CBLOCK 195 6 710

;;			TempSec -= 128;
CLINEA 0000H 0001H 02C7H 0004H 0012H
	add	r0,	#080h
	addc	r1,	#0ffh
	mov	er4,	er0

;;			TimeFlag++;
CLINEA 0000H 0000H 02C8H 0004H 000EH
	add	r6,	#01h
CBLOCKEND 195 6 713

;;		while(TempSec > 128){
CLINEA 0000H 0000H 02C6H 0001H 0001H
_$L174 :

;;		while(TempSec > 128){
CLINEA 0000H 0000H 02C6H 0012H 0022H
	mov	er0,	er4
	cmp	r4,	#080h
	cmpc	r5,	#00h
	bgt	_$L160

;;		if(TempSec != 0){
CLINEA 0000H 0001H 02CAH 0003H 0013H
	mov	er4,	er4
	beq	_$L162
CBLOCK 195 7 714

;;			timerThres = 0x1FF * TempSec;
CLINEA 0000H 0001H 02CBH 0004H 0020H
	sllc	r1,	#07h
	sll	r0,	#07h
	sllc	r1,	#02h
	sll	r0,	#02h
	sub	r0,	r4
	subc	r1,	r5
	mov	bp,	er0
CBLOCKEND 195 7 716

;;		else{
CLINEA 0000H 0001H 02CDH 0003H 0007H
	bal	_$L164
_$L162 :
CBLOCK 195 8 717

;;			timerThres = 0xFFFF;
CLINEA 0000H 0001H 02CEH 0004H 0017H
	mov	bp,	#-1

;;			TimeFlag--;
CLINEA 0000H 0000H 02CFH 0004H 000EH
	add	r6,	#0ffh
CBLOCKEND 195 8 720

;;		}
CLINEA 0000H 0000H 02D0H 0003H 0003H
_$L164 :
CBLOCKEND 195 5 721

;;	main_clrWDT();	
CLINEA 0000H 0001H 02D4H 0002H 0010H
	bl	_main_clrWDT

;;	tm_startAB();
CLINEA 0000H 0001H 00CFH 0002H 000AH
	mov	r0,	#00h
	st	r0,	0f8e9h

;;	tm_startAB();
CLINEA 0000H 0000H 00D0H 0002H 000BH
	sb	0f8ebh.0

;;	timer = tm_getABCounter();
CLINEA 0000H 0000H 011EH 0002H 001BH
	l	r0,	0f8e9h
	mov	r1,	#00h
	mov	er2,	er0

;;	timer = tm_getABCounter();
CLINEA 0000H 0000H 011FH 0002H 0014H
	l	r0,	0f8edh
	or	r3,	r0

;;	timer = tm_getABCounter();
CLINEA 0000H 0000H 0120H 0002H 000CH
	mov	er0,	er2

;;	while(timer < timerThres){
CLINEA 0000H 0001H 02D8H 0002H 001BH
	bal	_$L167
_$L169 :
CBLOCK 195 9 728

;;		timer = tm_getABCounter();
CLINEA 0000H 0000H 011EH 0002H 001BH
	l	r0,	0f8e9h
	mov	r1,	#00h
	mov	er2,	er0

;;		timer = tm_getABCounter();
CLINEA 0000H 0000H 011FH 0002H 0014H
	l	r0,	0f8edh
	or	r3,	r0

;;		timer = tm_getABCounter();
CLINEA 0000H 0000H 0120H 0002H 000CH
	mov	er0,	er2

;;		timer = tm_getABCounter();
CLINEA 0000H 0000H 02D9H 0003H 001CH
CBLOCKEND 195 9 731

;;	}
CLINEA 0000H 0000H 02DBH 0002H 0002H
_$L167 :

;;	while(timer < timerThres){
CLINEA 0000H 0000H 02D8H 0012H 0022H
	cmp	er0,	bp
	blt	_$L169

;;	if(TimeFlag !=0){
CLINEA 0000H 0001H 02DCH 0002H 0012H
	cmp	r6,	#00h
	beq	_$L172

;;		tm_stopAB();
CLINEA 0000H 0001H 0103H 0002H 000BH
	rb	0f8ebh.0

;;		TimeFlag--;
CLINEA 0000H 0000H 02DEH 0003H 000DH
	add	r6,	#0ffh

;;		timerThres = 0xFFFF;
CLINEA 0000H 0001H 02DFH 0003H 0016H
	mov	bp,	#-1

;;		goto TimerRestart;
CLINEA 0000H 0001H 02E0H 0003H 0014H
	bal	_$L164

;;	}
CLINEA 0000H 0000H 02E1H 0002H 0002H
_$L172 :
CBLOCKEND 195 2 738

;;}
CLINEA 0000H 0001H 02E2H 0001H 0001H
	pop	er8
	pop	bp
	pop	xr4
	pop	pc
CBLOCKEND 195 1 738
CFUNCTIONEND 195


	rseg $$Initialization$main
CFUNCTION 178

_Initialization	:
CBLOCK 178 1 745

;;{
CLINEA 0000H 0001H 02E9H 0001H 0001H
	push	lr
CBLOCK 178 2 745
CRET 0000H

;;	DSIO0 = 0; // 0=> Enables Synchronous Serial Port 0 (initial value).
CLINEA 0000H 0001H 02EDH 0002H 0045H
	rb	0f02ah.0

;;	DUA0  = 0; // 0=> Enables the operation of UART0 (initial value). 
CLINEA 0000H 0001H 02EFH 0002H 0043H
	rb	0f02ah.2

;;	DUA1  = 1; // 0=> Enables Uart1 (initial value). 
CLINEA 0000H 0001H 02F1H 0002H 0032H
	sb	0f02ah.3

;;	DI2C1 = 1; // 0=> Enables I2C bus Interface (Slave) (initial value).
CLINEA 0000H 0001H 02F2H 0002H 0045H
	sb	0f02ah.6

;;	DI2C0 = 0; // 0=> Enables I2C bus Interface (Master) (initial value).	
CLINEA 0000H 0001H 02F3H 0002H 0047H
	rb	0f02ah.7

;;	BLKCON4 = 0x01; // 0=> Enables SA-ADC
CLINEA 0000H 0001H 02F5H 0002H 0026H
	mov	r0,	#01h
	st	r0,	0f02ch

;;	BLKCON6 = 0xC3; // (1=disables; 0=enables) the operation of Timers 8, 9, A, E, F.
CLINEA 0000H 0001H 02F6H 0002H 0052H
	mov	r0,	#0c3h
	st	r0,	0f02eh

;;	BLKCON7 = 0x0B; // (1=disables; 0=enables) the operation of PWM (PWMC, PWMD, PWME, PWMF
CLINEA 0000H 0001H 02F8H 0002H 0058H
	mov	r0,	#0bh
	st	r0,	0f02fh

;;	PortA_Low();	//Initialize all 3 Ports of Q111 Port A to GPIO-Low
CLINEA 0000H 0001H 02FCH 0002H 0041H
	bl	_PortA_Low

;;	PortB_Low();	//Initialize all 8 Ports of Q111 Port B to GPIO-Low
CLINEA 0000H 0001H 02FDH 0002H 0041H
	bl	_PortB_Low

;;	PortC_Low();	//Initialize all 4 Ports of Q111 Port C to GPIO-Low
CLINEA 0000H 0001H 02FEH 0002H 0041H
	bl	_PortC_Low

;;	SetOSC(); //8MHz
CLINEA 0000H 0001H 0301H 0002H 0011H
	bl	_SetOSC

;;	irq_di(); 	//Disable Interrupts...
CLINEA 0000H 0001H 0304H 0002H 0023H
	bl	_irq_di

;;	irq_init();	//Initialize Interrupts (All Off and NO Requests)
CLINEA 0000H 0001H 0305H 0002H 003EH
	bl	_irq_init

;;	IE0 = IE1 = IE2 = IE3 = IE4 = IE5 = IE6 = IE7 = 0; // 0=DISABLED; 1=ENABLED
CLINEA 0000H 0001H 0308H 0002H 004CH
	mov	r0,	#00h
	st	r0,	0f017h
	st	r0,	0f016h
	st	r0,	0f015h
	st	r0,	0f014h
	st	r0,	0f013h
	st	r0,	0f012h
	st	r0,	0f011h
	st	r0,	0f010h

;;	IRQ0 = IRQ1 = IRQ2 = IRQ3 = IRQ4 = IRQ5 = IRQ6 = IRQ7 = 0;	//Clear all Requests...
CLINEA 0000H 0001H 030BH 0002H 0053H
	st	r0,	0f01fh
	st	r0,	0f01eh
	st	r0,	0f01dh
	st	r0,	0f01ch
	st	r0,	0f01bh
	st	r0,	0f01ah
	st	r0,	0f019h
	st	r0,	0f018h

;;	E2H = 0; 	// E2H is the Enable flag for 2Hz TBC Interrupt (1=ENABLED)
CLINEA 0000H 0001H 030DH 0002H 0046H
	rb	0f017h.3

;;	irq_setHdr((unsigned char)IRQ_NO_UA0INT, _intUart);
CLINEA 0000H 0001H 030FH 0002H 0034H
	mov	r2,	#BYTE1 OFFSET __intUart
	mov	r3,	#BYTE2 OFFSET __intUart
	mov	r0,	#0fh
	bl	_irq_setHdr

;;	EUA0 = 1; 	// EUA0 is the enable flag for the UART0 interrupt (1=ENABLED)
CLINEA 0000H 0001H 0310H 0002H 004AH
	sb	0f014h.0

;;	irq_setHdr((unsigned char)IRQ_NO_I2CMINT, _intI2c);
CLINEA 0000H 0001H 0313H 0002H 0034H
	mov	r2,	#BYTE1 OFFSET __intI2c
	mov	r3,	#BYTE2 OFFSET __intI2c
	mov	r0,	#0ch
	bl	_irq_setHdr

;;	EI2CM = 1;
CLINEA 0000H 0001H 0314H 0002H 000BH
	sb	0f012h.7

;;	QI2CM = 0; 
CLINEA 0000H 0001H 0315H 0002H 000CH
	rb	0f01ah.7

;;	PB2MD0 = 0;
CLINEA 0000H 0001H 0318H 0002H 000CH
	rb	0f25ch.2

;;	PB2MD1 = 0;
CLINEA 0000H 0001H 0319H 0002H 000CH
	rb	0f25dh.2

;;	PB2DIR = 1;
CLINEA 0000H 0001H 031AH 0002H 000CH
	sb	0f259h.2

;;	PB2C0 = 0;
CLINEA 0000H 0001H 031BH 0002H 000BH
	rb	0f25ah.2

;;	PB2C1 = 1;
CLINEA 0000H 0001H 031CH 0002H 000BH
	sb	0f25bh.2

;;	PB2E0 = 1;
CLINEA 0000H 0001H 031DH 0002H 000BH
	sb	0f024h.6

;;	PB2E1 = 0;
CLINEA 0000H 0001H 031EH 0002H 000BH
	rb	0f025h.6

;;	irq_setHdr((unsigned char)IRQ_NO_PB2INT, _intPB2);
CLINEA 0000H 0001H 0322H 0002H 0033H
	mov	r2,	#BYTE1 OFFSET __intPB2
	mov	r3,	#BYTE2 OFFSET __intPB2
	mov	r0,	#07h
	bl	_irq_setHdr

;;	EPB2 = 1;
CLINEA 0000H 0001H 0323H 0002H 000AH
	sb	0f011h.6

;;	QPB2 = 0;
CLINEA 0000H 0001H 0324H 0002H 000AH
	rb	0f019h.6

;;	irq_ei();	// Enable Interrupts...
CLINEA 0000H 0001H 0326H 0002H 0022H
	bl	_irq_ei

;;	WDTMOD = 0x03; 	// 0x03=overflow 8sec...
CLINEA 0000H 0001H 0329H 0002H 0029H
	mov	r0,	#03h
	st	r0,	0f00fh

;;	main_clrWDT(); 	// Clear WDT
CLINEA 0000H 0001H 032AH 0002H 001DH
	bl	_main_clrWDT

;;	i2c_init(I2C_MOD_FST, (unsigned short)HSCLK_KHZ, I2C_SYN_OFF);
CLINEA 0000H 0001H 0330H 0002H 003FH
	mov	r0,	#00h
	push	r0
	mov	r2,	#00h
	mov	r3,	#020h
	mov	r0,	#01h
	bl	_i2c_init
	add	sp,	#2 

;;			     &_uartSetParam );						// Param... 	 
CLINEA 0000H 0001H 0336H 0009H 002DH
	mov	r0,	#BYTE1 OFFSET __uartSetParam
	mov	r1,	#BYTE2 OFFSET __uartSetParam
	push	er0
	mov	r2,	#00h
	mov	r3,	#020h
	mov	r0,	#02h
	bl	_uart_init
	add	sp,	#2 

;;	uart_PortSet();
CLINEA 0000H 0001H 0337H 0002H 0010H
	bl	_uart_PortSet

;;	_flgUartFin = 0;
CLINEA 0000H 0001H 0338H 0002H 0011H
	mov	r0,	#00h
	st	r0,	NEAR __flgUartFin

;;	uart_stop();
CLINEA 0000H 0001H 0339H 0002H 000DH
	bl	_uart_stop

;;	PB4DIR = 0;		// PortB Bit7 set to Output Mode...
CLINEA 0000H 0001H 033DH 0002H 0031H
	rb	0f259h.4

;;	PB4C1  = 1;		// PortB Bit7 set to CMOS Output...
CLINEA 0000H 0001H 033EH 0002H 0031H
	sb	0f25bh.4

;;	PB4C0  = 1;	
CLINEA 0000H 0001H 033FH 0002H 000DH
	sb	0f25ah.4

;;	PB4MD1  = 0;	// PortB Bit7 set to General Purpose Output...
CLINEA 0000H 0001H 0340H 0002H 003CH
	rb	0f25dh.4

;;	PB4MD0  = 0;
CLINEA 0000H 0001H 0341H 0002H 000DH
	rb	0f25ch.4

;;	PB4D = 0;		// B.7 Output OFF....
CLINEA 0000H 0001H 0342H 0002H 0021H
	rb	0f258h.4
CBLOCKEND 178 2 836

;;}//End Initialization
CLINEA 0000H 0001H 0344H 0001H 0015H
	pop	pc
CBLOCKEND 178 1 836
CFUNCTIONEND 178


	rseg $$OutputPWM$main
CFUNCTION 196

_OutputPWM	:
CBLOCK 196 1 840

;;void OutputPWM(void){ 
CLINEA 0000H 0001H 0348H 0001H 0016H
CBLOCK 196 2 840

;;      PA2DIR = 0;       // PortB Bit0 set to Output Mode... 
CLINEA 0000H 0001H 0354H 0007H 003CH
	rb	0f251h.2

;;      PA2C1  = 1;       // PortB Bit0 set to CMOS Output...
CLINEA 0000H 0001H 0357H 0007H 003BH
	sb	0f253h.2

;;      PA2C0  = 1;       
CLINEA 0000H 0001H 0358H 0007H 0018H
	sb	0f252h.2

;;      PA2MD1  = 0;            // PortC Bit0 set to PWM Output (1,0)...
CLINEA 0000H 0001H 035BH 0007H 0046H
	rb	0f255h.2

;;      PA2MD0  = 1;    
CLINEA 0000H 0001H 035CH 0007H 0016H
	sb	0f254h.2

;;      PECS1 = 0;        //00= LS; 01=HS; 10=PLL
CLINEA 0000H 0001H 035FH 0007H 002FH
	rb	0f936h.1

;;      PECS0 = 1;
CLINEA 0000H 0001H 0360H 0007H 0010H
	sb	0f936h.0

;;      PWEP = 27000;            // Init Period to (1=255kHz; 10=46kHz; 50=10kHz; 200=2.5kH; ; 3185 = 160Hz; 3400=150Hz; 4250=120Hz; 5000=102Hz)
CLINEA 0000H 0001H 0366H 0007H 008EH
	mov	r0,	#078h
	mov	r1,	#069h
	st	er0,	0f930h

;;	  PWED = 10000;
CLINEA 0000H 0001H 036EH 0004H 0010H
	mov	r0,	#010h
	mov	r1,	#027h
	st	er0,	0f932h

;;      PERUN = 0;        // OFF to start
CLINEA 0000H 0001H 0377H 0007H 0027H
	rb	0f937h.0
CBLOCKEND 196 2 888

;;}
CLINEA 0000H 0001H 0378H 0001H 0001H
	rt
CBLOCKEND 196 1 888
CFUNCTIONEND 196


	rseg $$Init_KMX61$main
CFUNCTION 186

_Init_KMX61	:
CBLOCK 186 1 903

;;{ 
CLINEA 0000H 0001H 0387H 0001H 0002H
	push	lr
CBLOCK 186 2 903
CRET 0000H

;;	RegVal = 0x03u;
CLINEA 0000H 0001H 0389H 0002H 0010H
	mov	r0,	#03h
	st	r0,	NEAR _RegVal

;;	I2C_Write(KMX61_I2C_ADDR, &KMX61_STBY_REG, 1, &RegVal, 1);
CLINEA 0000H 0001H 038AH 0002H 003BH
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _RegVal
	mov	r1,	#BYTE2 OFFSET _RegVal
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _KMX61_STBY_REG
	mov	r3,	#BYTE2 OFFSET _KMX61_STBY_REG
	mov	r0,	#0eh
	bl	_I2C_Write
	add	sp,	#6 

;;	I2C_Write(KMX61_I2C_ADDR, &KMX61_SELF_TEST, 1, &KMX61_SELF_TEST_CFGDAT, 1);
CLINEA 0000H 0001H 038CH 0002H 004CH
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _KMX61_SELF_TEST_CFGDAT
	mov	r1,	#BYTE2 OFFSET _KMX61_SELF_TEST_CFGDAT
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _KMX61_SELF_TEST
	mov	r3,	#BYTE2 OFFSET _KMX61_SELF_TEST
	mov	r0,	#0eh
	bl	_I2C_Write
	add	sp,	#6 

;;	I2C_Write(KMX61_I2C_ADDR, &KMX61_CNTL1, 1, &KMX61_CNTL1_CFGDAT, 1);
CLINEA 0000H 0001H 038DH 0002H 0044H
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _KMX61_CNTL1_CFGDAT
	mov	r1,	#BYTE2 OFFSET _KMX61_CNTL1_CFGDAT
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _KMX61_CNTL1
	mov	r3,	#BYTE2 OFFSET _KMX61_CNTL1
	mov	r0,	#0eh
	bl	_I2C_Write
	add	sp,	#6 

;;	I2C_Write(KMX61_I2C_ADDR, &KMX61_CNTL2, 1, &KMX61_CNTL2_CFGDAT, 1);
CLINEA 0000H 0001H 038EH 0002H 0044H
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _KMX61_CNTL2_CFGDAT
	mov	r1,	#BYTE2 OFFSET _KMX61_CNTL2_CFGDAT
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _KMX61_CNTL2
	mov	r3,	#BYTE2 OFFSET _KMX61_CNTL2
	mov	r0,	#0eh
	bl	_I2C_Write
	add	sp,	#6 

;;	I2C_Write(KMX61_I2C_ADDR, &KMX61_ODCNTL, 1, &KMX61_ODCNTL_CFGDAT, 1);
CLINEA 0000H 0001H 038FH 0002H 0046H
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _KMX61_ODCNTL_CFGDAT
	mov	r1,	#BYTE2 OFFSET _KMX61_ODCNTL_CFGDAT
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _KMX61_ODCNTL
	mov	r3,	#BYTE2 OFFSET _KMX61_ODCNTL
	mov	r0,	#0eh
	bl	_I2C_Write
	add	sp,	#6 

;;	I2C_Write(KMX61_I2C_ADDR, &KMX61_TEMP_EN_CNTL, 1, &KMX61_TEMP_EN_CNTL_CFGDAT, 1);
CLINEA 0000H 0001H 0390H 0002H 0052H
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _KMX61_TEMP_EN_CNTL_CFGDAT
	mov	r1,	#BYTE2 OFFSET _KMX61_TEMP_EN_CNTL_CFGDAT
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _KMX61_TEMP_EN_CNTL
	mov	r3,	#BYTE2 OFFSET _KMX61_TEMP_EN_CNTL
	mov	r0,	#0eh
	bl	_I2C_Write
	add	sp,	#6 

;;	I2C_Write(KMX61_I2C_ADDR, &KMX61_BUF_CTRL1, 1, &KMX61_BUF_CTRL1_CFGDAT, 1);
CLINEA 0000H 0001H 0391H 0002H 004CH
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _KMX61_BUF_CTRL1_CFGDAT
	mov	r1,	#BYTE2 OFFSET _KMX61_BUF_CTRL1_CFGDAT
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _KMX61_BUF_CTRL1
	mov	r3,	#BYTE2 OFFSET _KMX61_BUF_CTRL1
	mov	r0,	#0eh
	bl	_I2C_Write
	add	sp,	#6 

;;	I2C_Write(KMX61_I2C_ADDR, &KMX61_BUF_CTRL2, 1, &KMX61_BUF_CTRL2_CFGDAT, 1);
CLINEA 0000H 0001H 0392H 0002H 004CH
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _KMX61_BUF_CTRL2_CFGDAT
	mov	r1,	#BYTE2 OFFSET _KMX61_BUF_CTRL2_CFGDAT
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _KMX61_BUF_CTRL2
	mov	r3,	#BYTE2 OFFSET _KMX61_BUF_CTRL2
	mov	r0,	#0eh
	bl	_I2C_Write
	add	sp,	#6 

;;	I2C_Write(KMX61_I2C_ADDR, &KMX61_INC1, 1, &KMX61_INC1_CFGDAT, 1);
CLINEA 0000H 0001H 0395H 0002H 0042H
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _KMX61_INC1_CFGDAT
	mov	r1,	#BYTE2 OFFSET _KMX61_INC1_CFGDAT
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _KMX61_INC1
	mov	r3,	#BYTE2 OFFSET _KMX61_INC1
	mov	r0,	#0eh
	bl	_I2C_Write
	add	sp,	#6 

;;	I2C_Write(KMX61_I2C_ADDR, &KMX61_INC3, 1, &KMX61_INC3_CFGDAT, 1);
CLINEA 0000H 0001H 0396H 0002H 0042H
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _KMX61_INC3_CFGDAT
	mov	r1,	#BYTE2 OFFSET _KMX61_INC3_CFGDAT
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _KMX61_INC3
	mov	r3,	#BYTE2 OFFSET _KMX61_INC3
	mov	r0,	#0eh
	bl	_I2C_Write
	add	sp,	#6 

;;	I2C_Write(KMX61_I2C_ADDR, &KMX61_WUFTH, 1, &KMX61_WUFTH_CFGDAT, 1);
CLINEA 0000H 0001H 0397H 0002H 0044H
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _KMX61_WUFTH_CFGDAT
	mov	r1,	#BYTE2 OFFSET _KMX61_WUFTH_CFGDAT
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _KMX61_WUFTH
	mov	r3,	#BYTE2 OFFSET _KMX61_WUFTH
	mov	r0,	#0eh
	bl	_I2C_Write
	add	sp,	#6 

;;	I2C_Write(KMX61_I2C_ADDR, &KMX61_WUFC, 1, &KMX61_WUFC_CFGDAT, 1);
CLINEA 0000H 0001H 0398H 0002H 0042H
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _KMX61_WUFC_CFGDAT
	mov	r1,	#BYTE2 OFFSET _KMX61_WUFC_CFGDAT
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _KMX61_WUFC
	mov	r3,	#BYTE2 OFFSET _KMX61_WUFC
	mov	r0,	#0eh
	bl	_I2C_Write
	add	sp,	#6 

;;	RegVal = 0x02u;
CLINEA 0000H 0001H 039BH 0002H 0010H
	mov	r0,	#02h
	st	r0,	NEAR _RegVal

;;	I2C_Write(KMX61_I2C_ADDR, &KMX61_STBY_REG, 1, &RegVal, 1);
CLINEA 0000H 0001H 039CH 0002H 003BH
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _RegVal
	mov	r1,	#BYTE2 OFFSET _RegVal
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _KMX61_STBY_REG
	mov	r3,	#BYTE2 OFFSET _KMX61_STBY_REG
	mov	r0,	#0eh
	bl	_I2C_Write
	add	sp,	#6 
CBLOCKEND 186 2 925

;;}
CLINEA 0000H 0001H 039DH 0001H 0001H
	pop	pc
CBLOCKEND 186 1 925
CFUNCTIONEND 186


	rseg $$write$main
CFUNCTION 183

_write	:
CBLOCK 183 1 938

;;{
CLINEA 0000H 0001H 03AAH 0001H 0001H
	push	lr
	push	fp
	mov	fp,	sp
	push	er10
	mov	er10,	er2
CBLOCK 183 2 938
CRET 0004H
CARGUMENT 47H 0002H 0000H "handle" 02H 00H 01H
CARGUMENT 46H 0002H 0029H "buffer" 04H 03H 00H 00H 00H
CARGUMENT 42H 0002H 0004H "len" 02H 00H 01H

;;	_flgUartFin = 0; 
CLINEA 0000H 0001H 03ABH 0002H 0012H
	mov	r0,	#00h
	st	r0,	NEAR __flgUartFin

;;	uart_stop();
CLINEA 0000H 0001H 03ACH 0002H 000DH
	bl	_uart_stop

;;	uart_startSend(buffer, len, _funcUartFin); 
CLINEA 0000H 0001H 03ADH 0002H 002CH
	mov	r0,	#BYTE1 OFFSET __funcUartFin
	mov	r1,	#BYTE2 OFFSET __funcUartFin
	push	er0
	l	er2,	4[fp]
	mov	er0,	er10
	bl	_uart_startSend
	add	sp,	#2 

;;	while(_flgUartFin != 1)
CLINEA 0000H 0000H 03AEH 0001H 0001H
	bal	_$L183

;;	while(_flgUartFin != 1)
CLINEA 0000H 0000H 03AEH 0002H 0018H
_$L181 :
CBLOCK 183 3 943

;;		main_clrWDT();
CLINEA 0000H 0001H 03B0H 0003H 0010H
	bl	_main_clrWDT
CBLOCKEND 183 3 945

;;	while(_flgUartFin != 1)
CLINEA 0000H 0000H 03AEH 0001H 0001H
_$L183 :

;;	while(_flgUartFin != 1)
CLINEA 0000H 0000H 03AEH 0012H 0022H
	l	r0,	NEAR __flgUartFin
	cmp	r0,	#01h
	bne	_$L181

;;	return len;
CLINEA 0000H 0001H 03B2H 0002H 000CH
	l	er0,	4[fp]
CBLOCKEND 183 2 947

;;}
CLINEA 0000H 0000H 03B3H 0001H 0001H
	pop	er10
	mov	sp,	fp
	pop	fp
	pop	pc
CBLOCKEND 183 1 947
CFUNCTIONEND 183


	rseg $$I2C_Read$main
CFUNCTION 184

_I2C_Read	:
CBLOCK 184 1 962

;;{
CLINEA 0000H 0001H 03C2H 0001H 0001H
	push	lr
	push	fp
	mov	fp,	sp
	push	xr8
	mov	er10,	er2
	mov	r8,	r0
CBLOCK 184 2 962
CRET 0006H
CARGUMENT 46H 0001H 001CH "slave_address" 02H 00H 00H
CARGUMENT 46H 0002H 0029H "reg_address" 04H 03H 00H 00H 00H
CARGUMENT 42H 0001H 0004H "reg_address_size" 02H 00H 00H
CARGUMENT 42H 0002H 0006H "buffer" 04H 03H 00H 00H 00H
CARGUMENT 42H 0001H 0008H "size" 02H 00H 00H

;;	_flgI2CFin = 0;
CLINEA 0000H 0001H 03C3H 0002H 0010H
	mov	r0,	#00h
	st	r0,	NEAR __flgI2CFin

;;	i2c_stop();	
CLINEA 0000H 0001H 03C4H 0002H 000DH
	bl	_i2c_stop

;;	i2c_startReceive(slave_address, reg_address, reg_address_size, buffer, size, (cbfI2c)_funcI2CFin);
CLINEA 0000H 0001H 03C5H 0002H 0063H
	mov	r0,	#BYTE1 OFFSET __funcI2CFin
	mov	r1,	#BYTE2 OFFSET __funcI2CFin
	push	er0
	l	r0,	8[fp]
	mov	r1,	#00h
	push	er0
	l	er0,	6[fp]
	push	er0
	l	r0,	4[fp]
	mov	r1,	#00h
	push	er0
	mov	er2,	er10
	mov	r0,	r8
	bl	_i2c_startReceive
	add	sp,	#8 

;;	while(_flgI2CFin != 1)
CLINEA 0000H 0000H 03C6H 0001H 0001H
	bal	_$L189

;;	while(_flgI2CFin != 1)
CLINEA 0000H 0000H 03C6H 0002H 0017H
_$L187 :
CBLOCK 184 3 967

;;		main_clrWDT();
CLINEA 0000H 0001H 03C8H 0003H 0010H
	bl	_main_clrWDT
CBLOCKEND 184 3 969

;;	while(_flgI2CFin != 1)
CLINEA 0000H 0000H 03C6H 0001H 0001H
_$L189 :

;;	while(_flgI2CFin != 1)
CLINEA 0000H 0000H 03C6H 0012H 0022H
	l	r0,	NEAR __flgI2CFin
	cmp	r0,	#01h
	bne	_$L187
CBLOCKEND 184 2 970

;;}
CLINEA 0000H 0001H 03CAH 0001H 0001H
	pop	xr8
	mov	sp,	fp
	pop	fp
	pop	pc
CBLOCKEND 184 1 970
CFUNCTIONEND 184


	rseg $$I2C_Write$main
CFUNCTION 185

_I2C_Write	:
CBLOCK 185 1 985

;;{
CLINEA 0000H 0001H 03D9H 0001H 0001H
	push	lr
	push	fp
	mov	fp,	sp
	push	xr8
	mov	er10,	er2
	mov	r8,	r0
CBLOCK 185 2 985
CRET 0006H
CARGUMENT 46H 0001H 001CH "slave_address" 02H 00H 00H
CARGUMENT 46H 0002H 0029H "reg_address" 04H 03H 00H 00H 00H
CARGUMENT 42H 0001H 0004H "reg_address_size" 02H 00H 00H
CARGUMENT 42H 0002H 0006H "buffer" 04H 03H 00H 00H 00H
CARGUMENT 42H 0001H 0008H "size" 02H 00H 00H

;;	_flgI2CFin = 0;
CLINEA 0000H 0001H 03DAH 0002H 0010H
	mov	r0,	#00h
	st	r0,	NEAR __flgI2CFin

;;	i2c_stop();	
CLINEA 0000H 0001H 03DBH 0002H 000DH
	bl	_i2c_stop

;;	i2c_startSend(slave_address, reg_address, reg_address_size, buffer, size, (cbfI2c)_funcI2CFin);
CLINEA 0000H 0001H 03DCH 0002H 0060H
	mov	r0,	#BYTE1 OFFSET __funcI2CFin
	mov	r1,	#BYTE2 OFFSET __funcI2CFin
	push	er0
	l	r0,	8[fp]
	mov	r1,	#00h
	push	er0
	l	er0,	6[fp]
	push	er0
	l	r0,	4[fp]
	mov	r1,	#00h
	push	er0
	mov	er2,	er10
	mov	r0,	r8
	bl	_i2c_startSend
	add	sp,	#8 

;;	while(_flgI2CFin != 1)
CLINEA 0000H 0000H 03DDH 0001H 0001H
	bal	_$L195

;;	while(_flgI2CFin != 1)
CLINEA 0000H 0000H 03DDH 0002H 0017H
_$L193 :
CBLOCK 185 3 990

;;		main_clrWDT();
CLINEA 0000H 0001H 03DFH 0003H 0010H
	bl	_main_clrWDT
CBLOCKEND 185 3 992

;;	while(_flgI2CFin != 1)
CLINEA 0000H 0000H 03DDH 0001H 0001H
_$L195 :

;;	while(_flgI2CFin != 1)
CLINEA 0000H 0000H 03DDH 0012H 0022H
	l	r0,	NEAR __flgI2CFin
	cmp	r0,	#01h
	bne	_$L193
CBLOCKEND 185 2 993

;;}
CLINEA 0000H 0001H 03E1H 0001H 0001H
	pop	xr8
	mov	sp,	fp
	pop	fp
	pop	pc
CBLOCKEND 185 1 993
CFUNCTIONEND 185


	rseg $$_funcUartFin$main
CFUNCTION 187

__funcUartFin	:
CBLOCK 187 1 1004

;;{
CLINEA 0000H 0001H 03ECH 0001H 0001H
	push	lr
CBLOCK 187 2 1004
CRET 0000H
CARGUMENT 46H 0002H 0000H "size" 02H 00H 01H
CARGUMENT 46H 0001H 0000H "errStat" 02H 00H 00H

;;	uart_continue();					// Function in UART.c: process to continue send and receive...
CLINEA 0000H 0001H 03EDH 0002H 0054H
	bl	_uart_continue

;;	_flgUartFin = (unsigned char)FLG_SET;
CLINEA 0000H 0001H 03EEH 0002H 0026H
	mov	r0,	#01h
	st	r0,	NEAR __flgUartFin

;;	main_reqNotHalt();				// uncommented 5/2/2013
CLINEA 0000H 0001H 03EFH 0002H 002EH
	bl	_main_reqNotHalt
CBLOCKEND 187 2 1008

;;}
CLINEA 0000H 0001H 03F0H 0001H 0001H
	pop	pc
CBLOCKEND 187 1 1008
CFUNCTIONEND 187


	rseg $$_funcI2CFin$main
CFUNCTION 188

__funcI2CFin	:
CBLOCK 188 1 1019

;;{
CLINEA 0000H 0001H 03FBH 0001H 0001H
	push	lr
CBLOCK 188 2 1019
CRET 0000H
CARGUMENT 46H 0002H 0000H "size" 02H 00H 01H
CARGUMENT 46H 0001H 0000H "errStat" 02H 00H 00H

;;	i2c_continue();					// Function in UART.c: process to continue send and receive...
CLINEA 0000H 0001H 03FCH 0002H 0053H
	bl	_i2c_continue

;;	_flgI2CFin = (unsigned char)FLG_SET;
CLINEA 0000H 0001H 03FDH 0002H 0025H
	mov	r0,	#01h
	st	r0,	NEAR __flgI2CFin

;;	main_reqNotHalt();				// uncommented 5/2/2013
CLINEA 0000H 0001H 03FEH 0002H 002EH
	bl	_main_reqNotHalt
CBLOCKEND 188 2 1023

;;}
CLINEA 0000H 0001H 03FFH 0001H 0001H
	pop	pc
CBLOCKEND 188 1 1023
CFUNCTIONEND 188


	rseg $$_intI2c$main
CFUNCTION 192

__intI2c	:
CBLOCK 192 1 1033

;;{
CLINEA 0000H 0001H 0409H 0001H 0001H
	push	lr
CBLOCK 192 2 1033
CRET 0000H

;;	(void)i2c_continue();
CLINEA 0000H 0001H 040AH 0002H 0016H
	bl	_i2c_continue

;;	main_reqNotHalt();
CLINEA 0000H 0001H 040BH 0002H 0013H
	bl	_main_reqNotHalt
CBLOCKEND 192 2 1036

;;}
CLINEA 0000H 0001H 040CH 0001H 0001H
	pop	pc
CBLOCKEND 192 1 1036
CFUNCTIONEND 192


	rseg $$_intPB2$main
CFUNCTION 193

__intPB2	:
CBLOCK 193 1 1046

;;{
CLINEA 0000H 0001H 0416H 0001H 0001H
CBLOCK 193 2 1046

;;	_flgPB2Int = 1;
CLINEA 0000H 0001H 0417H 0002H 0010H
	mov	r0,	#01h
	st	r0,	NEAR __flgPB2Int
CBLOCKEND 193 2 1049

;;}
CLINEA 0000H 0001H 0419H 0001H 0001H
	rt
CBLOCKEND 193 1 1049
CFUNCTIONEND 193


	rseg $$checkI2C$main
CFUNCTION 189

_checkI2C	:
CBLOCK 189 1 1059

;;{
CLINEA 0000H 0001H 0423H 0001H 0001H
	push	lr
CBLOCK 189 2 1059
CRET 0000H
CLOCAL 47H 0002H 0024H 0002H "ret" 02H 00H 01H

;;	while (ret != 1) {
CLINEA 0000H 0000H 0428H 0002H 0013H
_$L203 :
CBLOCK 189 3 1064

;;		ret = i2c_continue();
CLINEA 0000H 0000H 0429H 0003H 0017H
	bl	_i2c_continue
CBLOCK 189 4 1066
CBLOCKEND 189 4 1068
CBLOCKEND 189 3 1069

;;	while (ret != 1) {
CLINEA 0000H 0000H 0428H 0012H 0022H
	cmp	r0,	#01h
	cmpc	r1,	#00h
	bne	_$L203
CBLOCKEND 189 2 1070

;;}
CLINEA 0000H 0001H 042EH 0001H 0001H
	pop	pc
CBLOCKEND 189 1 1070
CFUNCTIONEND 189


	rseg $$main_reqNotHalt$main
CFUNCTION 190

_main_reqNotHalt	:
CBLOCK 190 1 1080

;;{
CLINEA 0000H 0001H 0438H 0001H 0001H
CBLOCK 190 2 1080

;;	_reqNotHalt = (unsigned char)FLG_SET;
CLINEA 0000H 0001H 0439H 0002H 0026H
	mov	r0,	#01h
	st	r0,	NEAR __reqNotHalt
CBLOCKEND 190 2 1082

;;}
CLINEA 0000H 0001H 043AH 0001H 0001H
	rt
CBLOCKEND 190 1 1082
CFUNCTIONEND 190


	rseg $$_intUart$main
CFUNCTION 191

__intUart	:
CBLOCK 191 1 1092

;;{
CLINEA 0000H 0001H 0444H 0001H 0001H
CBLOCK 191 2 1092

;;		uart_continue(); //in UART.c: process to continue send and receive...
CLINEA 0000H 0001H 0445H 0003H 0047H
	b	_uart_continue
CBLOCKEND 191 2 1094
CLINEA 0000H 0001H 0446H 0001H 0001H
CBLOCKEND 191 1 1094
CFUNCTIONEND 191


	rseg $$SetOSC$main
CFUNCTION 179

_SetOSC	:
CBLOCK 179 1 1099

;;static void SetOSC(void){
CLINEA 0000H 0001H 044BH 0001H 0019H
CBLOCK 179 2 1099

;;		SYSC0  = 0;			// Used to select the frequency of the HSCLK => 00=8.192MHz.
CLINEA 0000H 0001H 044EH 0003H 004CH
	rb	0f002h.0

;;		SYSC1  = 0;			//...
CLINEA 0000H 0001H 044FH 0003H 0015H
	rb	0f002h.1

;;		OSCM1  = 1;			// 10 => Built-in PLL oscillation mode
CLINEA 0000H 0001H 0450H 0003H 0036H
	sb	0f002h.3

;;		OSCM0  = 0;			//...
CLINEA 0000H 0001H 0451H 0003H 0015H
	rb	0f002h.2

;;		ENOSC  = 1;			// 1=Enable High Speed Oscillator...
CLINEA 0000H 0001H 0454H 0003H 0034H
	sb	0f003h.1

;;		SYSCLK = 1;			// Select System Clock: 1=HSCLK; 0=LSCLK 
CLINEA 0000H 0001H 0455H 0003H 0039H
	sb	0f003h.0

;;		LPLL   = 1;			// 1=Enables the use of PLL oscillation - ADDED 4/30/2013
CLINEA 0000H 0001H 0456H 0003H 0049H
	sb	0f003h.7

;;	__EI();					//INT enable 
CLINEA 0000H 0001H 0458H 0002H 001AH
	ei
CBLOCKEND 179 2 1113

;;}
CLINEA 0000H 0001H 0459H 0001H 0001H
	rt
CBLOCKEND 179 1 1113
CFUNCTIONEND 179


	rseg $$analog_comparator$main
CFUNCTION 223

_analog_comparator	:
CBLOCK 223 1 1120

;;void analog_comparator(void){
CLINEA 0000H 0001H 0460H 0001H 001DH
CBLOCK 223 2 1120

;;	CMP0EN  = 0x01; 	// Comparator ON...
CLINEA 0000H 0001H 0476H 0002H 0025H
	sb	0f950h.0

;;	CMP0E1  = 0x00; 	// No Interupt...
CLINEA 0000H 0001H 0477H 0002H 0023H
	rb	0f951h.1

;;	CMP0E0  = 0x00;
CLINEA 0000H 0001H 0478H 0002H 0010H
	rb	0f951h.0

;;	CMP0SM1 = 0x00; 	// Detect without Sampling... 
CLINEA 0000H 0001H 0479H 0002H 0030H
	rb	0f951h.3

;;	CMP0RFS = 0x01; 	// Differential Input on B5
CLINEA 0000H 0001H 047AH 0002H 002DH
	sb	0f951h.4

;;	CMP0EN  = 0x00;
CLINEA 0000H 0001H 047DH 0002H 0010H
	rb	0f950h.0
CBLOCKEND 223 2 1152

;;}
CLINEA 0000H 0001H 0480H 0001H 0001H
	rt
CBLOCKEND 223 1 1152
CFUNCTIONEND 223


	rseg $$PortA_Low$main
CFUNCTION 180

_PortA_Low	:
CBLOCK 180 1 1160

;;void PortA_Low(void){
CLINEA 0000H 0001H 0488H 0001H 0015H
CBLOCK 180 2 1160

;;	PA0DIR = 0;		// PortA Bit0 set to Output Mode...
CLINEA 0000H 0001H 0492H 0002H 0031H
	rb	0f251h.0

;;	PA1DIR = 0;		// PortA Bit1 set to Output Mode...
CLINEA 0000H 0001H 0493H 0002H 0031H
	rb	0f251h.1

;;	PA2DIR = 0;		// PortA Bit2 set to Output Mode...
CLINEA 0000H 0001H 0494H 0002H 0031H
	rb	0f251h.2

;;	PA0C1  = 1;		// PortA Bit0 set to CMOS Output...
CLINEA 0000H 0001H 0497H 0002H 0031H
	sb	0f253h.0

;;	PA0C0  = 1;		
CLINEA 0000H 0001H 0498H 0002H 000EH
	sb	0f252h.0

;;	PA1C1  = 1;		// PortA Bit1 set to CMOS Output...
CLINEA 0000H 0001H 0499H 0002H 0031H
	sb	0f253h.1

;;	PA1C0  = 1;	
CLINEA 0000H 0001H 049AH 0002H 000DH
	sb	0f252h.1

;;	PA2C1  = 1;		// PortA Bit2 set to CMOS Output...
CLINEA 0000H 0001H 049BH 0002H 0031H
	sb	0f253h.2

;;	PA2C0  = 1;	
CLINEA 0000H 0001H 049CH 0002H 000DH
	sb	0f252h.2

;;	PA0MD1  = 0;	// PortA Bit0 set to General Purpose Output...
CLINEA 0000H 0001H 049FH 0002H 003CH
	rb	0f255h.0

;;	PA0MD0  = 0;	
CLINEA 0000H 0001H 04A0H 0002H 000EH
	rb	0f254h.0

;;	PA1MD1  = 0;	// PortA Bit1 set to General Purpose Output...
CLINEA 0000H 0001H 04A1H 0002H 003CH
	rb	0f255h.1

;;	PA1MD0  = 0;	
CLINEA 0000H 0001H 04A2H 0002H 000EH
	rb	0f254h.1

;;	PA2MD1  = 0;	// PortA Bit2 set to General Purpose Output...
CLINEA 0000H 0001H 04A3H 0002H 003CH
	rb	0f255h.2

;;	PA2MD0  = 0;	
CLINEA 0000H 0001H 04A4H 0002H 000EH
	rb	0f254h.2

;;	PA0D = 0;		// A.0 Output OFF....
CLINEA 0000H 0001H 04A7H 0002H 0021H
	rb	0f250h.0

;;	PA1D = 0;		// A.1 Output OFF....
CLINEA 0000H 0001H 04A8H 0002H 0021H
	rb	0f250h.1

;;	PA2D = 0;		// A.2 Output OFF....
CLINEA 0000H 0001H 04A9H 0002H 0021H
	rb	0f250h.2

;;	main_clrWDT(); 	// Clear WDT
CLINEA 0000H 0001H 04ABH 0002H 001DH
	b	_main_clrWDT
CBLOCKEND 180 2 1197
CLINEA 0000H 0001H 04ADH 0001H 0001H
CBLOCKEND 180 1 1197
CFUNCTIONEND 180


	rseg $$PortB_Low$main
CFUNCTION 181

_PortB_Low	:
CBLOCK 181 1 1203

;;void PortB_Low(void){
CLINEA 0000H 0001H 04B3H 0001H 0015H
CBLOCK 181 2 1203

;;	PB0DIR = 0;		// PortB Bit0 set to Output Mode...
CLINEA 0000H 0001H 04BDH 0002H 0031H
	rb	0f259h.0

;;	PB1DIR = 0;		// PortB Bit1 set to Output Mode...
CLINEA 0000H 0001H 04BEH 0002H 0031H
	rb	0f259h.1

;;	PB2DIR = 0;		// PortB Bit2 set to Output Mode...
CLINEA 0000H 0001H 04BFH 0002H 0031H
	rb	0f259h.2

;;	PB3DIR = 0;		// PortB Bit3 set to Output Mode...
CLINEA 0000H 0001H 04C0H 0002H 0031H
	rb	0f259h.3

;;	PB4DIR = 0;		// PortB Bit4 set to Output Mode...
CLINEA 0000H 0001H 04C1H 0002H 0031H
	rb	0f259h.4

;;	PB5DIR = 0;		// PortB Bit5 set to Output Mode...
CLINEA 0000H 0001H 04C2H 0002H 0031H
	rb	0f259h.5

;;	PB6DIR = 0;		// PortB Bit6 set to Output Mode...
CLINEA 0000H 0001H 04C3H 0002H 0031H
	rb	0f259h.6

;;	PB7DIR = 0;		// PortB Bit7 set to Output Mode...
CLINEA 0000H 0001H 04C4H 0002H 0031H
	rb	0f259h.7

;;	PB0C1  = 1;		// PortB Bit0 set to CMOS Output...
CLINEA 0000H 0001H 04C7H 0002H 0031H
	sb	0f25bh.0

;;	PB0C0  = 1;		
CLINEA 0000H 0001H 04C8H 0002H 000EH
	sb	0f25ah.0

;;	PB1C1  = 1;		// PortB Bit1 set to CMOS Output...
CLINEA 0000H 0001H 04C9H 0002H 0031H
	sb	0f25bh.1

;;	PB1C0  = 1;	
CLINEA 0000H 0001H 04CAH 0002H 000DH
	sb	0f25ah.1

;;	PB2C1  = 1;		// PortB Bit2 set to CMOS Output...
CLINEA 0000H 0001H 04CBH 0002H 0031H
	sb	0f25bh.2

;;	PB2C0  = 1;	
CLINEA 0000H 0001H 04CCH 0002H 000DH
	sb	0f25ah.2

;;	PB3C1  = 1;		// PortB Bit3 set to CMOS Output...
CLINEA 0000H 0001H 04CDH 0002H 0031H
	sb	0f25bh.3

;;	PB3C0  = 1;		
CLINEA 0000H 0001H 04CEH 0002H 000EH
	sb	0f25ah.3

;;	PB4C1  = 1;		// PortB Bit4 set to CMOS Output...
CLINEA 0000H 0001H 04CFH 0002H 0031H
	sb	0f25bh.4

;;	PB4C0  = 1;	
CLINEA 0000H 0001H 04D0H 0002H 000DH
	sb	0f25ah.4

;;	PB5C1  = 1;		// PortB Bit5 set to CMOS Output...
CLINEA 0000H 0001H 04D1H 0002H 0031H
	sb	0f25bh.5

;;	PB5C0  = 1;	
CLINEA 0000H 0001H 04D2H 0002H 000DH
	sb	0f25ah.5

;;	PB6C1  = 1;		// PortB Bit6 set to CMOS Output...
CLINEA 0000H 0001H 04D3H 0002H 0031H
	sb	0f25bh.6

;;	PB6C0  = 1;	
CLINEA 0000H 0001H 04D4H 0002H 000DH
	sb	0f25ah.6

;;	PB7C1  = 1;		// PortB Bit7 set to CMOS Output...
CLINEA 0000H 0001H 04D5H 0002H 0031H
	sb	0f25bh.7

;;	PB7C0  = 1;	
CLINEA 0000H 0001H 04D6H 0002H 000DH
	sb	0f25ah.7

;;	PB0MD1  = 0;	// PortB Bit0 set to General Purpose Output...
CLINEA 0000H 0001H 04D9H 0002H 003CH
	rb	0f25dh.0

;;	PB0MD0  = 0;	
CLINEA 0000H 0001H 04DAH 0002H 000EH
	rb	0f25ch.0

;;	PB1MD1  = 0;	// PortB Bit1 set to General Purpose Output...
CLINEA 0000H 0001H 04DBH 0002H 003CH
	rb	0f25dh.1

;;	PB1MD0  = 0;	
CLINEA 0000H 0001H 04DCH 0002H 000EH
	rb	0f25ch.1

;;	PB2MD1  = 0;	// PortB Bit2 set to General Purpose Output...
CLINEA 0000H 0001H 04DDH 0002H 003CH
	rb	0f25dh.2

;;	PB2MD0  = 0;	
CLINEA 0000H 0001H 04DEH 0002H 000EH
	rb	0f25ch.2

;;	PB3MD1  = 0;	// PortB Bit3 set to General Purpose Output...
CLINEA 0000H 0001H 04DFH 0002H 003CH
	rb	0f25dh.3

;;	PB3MD0  = 0;	
CLINEA 0000H 0001H 04E0H 0002H 000EH
	rb	0f25ch.3

;;	PB4MD1  = 0;	// PortB Bit4 set to General Purpose Output...
CLINEA 0000H 0001H 04E1H 0002H 003CH
	rb	0f25dh.4

;;	PB4MD0  = 0;	
CLINEA 0000H 0001H 04E2H 0002H 000EH
	rb	0f25ch.4

;;	PB5MD1  = 0;	// PortB Bit5 set to General Purpose Output...
CLINEA 0000H 0001H 04E3H 0002H 003CH
	rb	0f25dh.5

;;	PB5MD0  = 0;
CLINEA 0000H 0001H 04E4H 0002H 000DH
	rb	0f25ch.5

;;	PB6MD1  = 0;	// PortB Bit6 set to General Purpose Output...
CLINEA 0000H 0001H 04E5H 0002H 003CH
	rb	0f25dh.6

;;	PB6MD0  = 0;	
CLINEA 0000H 0001H 04E6H 0002H 000EH
	rb	0f25ch.6

;;	PB7MD1  = 0;	// PortB Bit7 set to General Purpose Output...
CLINEA 0000H 0001H 04E7H 0002H 003CH
	rb	0f25dh.7

;;	PB7MD0  = 0;
CLINEA 0000H 0001H 04E8H 0002H 000DH
	rb	0f25ch.7

;;	PB0D = 0;		// B.0 Output OFF....
CLINEA 0000H 0001H 04EBH 0002H 0021H
	rb	0f258h.0

;;	PB1D = 0;		// B.1 Output OFF....
CLINEA 0000H 0001H 04ECH 0002H 0021H
	rb	0f258h.1

;;	PB2D = 0;		// B.2 Output OFF....
CLINEA 0000H 0001H 04EDH 0002H 0021H
	rb	0f258h.2

;;	PB3D = 0;		// B.3 Output OFF....
CLINEA 0000H 0001H 04EEH 0002H 0021H
	rb	0f258h.3

;;	PB4D = 0;		// B.4 Output OFF....
CLINEA 0000H 0001H 04EFH 0002H 0021H
	rb	0f258h.4

;;	PB5D = 0;		// B.5 Output OFF....
CLINEA 0000H 0001H 04F0H 0002H 0021H
	rb	0f258h.5

;;	PB6D = 0;		// B.6 Output OFF....
CLINEA 0000H 0001H 04F1H 0002H 0021H
	rb	0f258h.6

;;	PB7D = 0;		// B.7 Output OFF....
CLINEA 0000H 0001H 04F2H 0002H 0021H
	rb	0f258h.7

;;	main_clrWDT(); 	// Clear WDT
CLINEA 0000H 0001H 04F4H 0002H 001DH
	b	_main_clrWDT
CBLOCKEND 181 2 1270
CLINEA 0000H 0001H 04F6H 0001H 0001H
CBLOCKEND 181 1 1270
CFUNCTIONEND 181


	rseg $$PortC_Low$main
CFUNCTION 182

_PortC_Low	:
CBLOCK 182 1 1276

;;void PortC_Low(void){
CLINEA 0000H 0001H 04FCH 0001H 0015H
CBLOCK 182 2 1276

;;	PC0DIR = 0;		// PortC Bit0 set to Output Mode...
CLINEA 0000H 0001H 0506H 0002H 0031H
	rb	0f261h.0

;;	PC1DIR = 0;		// PortC Bit1 set to Output Mode...
CLINEA 0000H 0001H 0507H 0002H 0031H
	rb	0f261h.1

;;	PC2DIR = 0;		// PortC Bit2 set to Output Mode...
CLINEA 0000H 0001H 0508H 0002H 0031H
	rb	0f261h.2

;;	PC3DIR = 0;		// PortC Bit3 set to Output Mode...
CLINEA 0000H 0001H 0509H 0002H 0031H
	rb	0f261h.3

;;	PC0C1  = 1;		// PortC Bit0 set to CMOS Output...
CLINEA 0000H 0001H 050DH 0002H 0031H
	sb	0f263h.0

;;	PC0C0  = 1;		
CLINEA 0000H 0001H 050EH 0002H 000EH
	sb	0f262h.0

;;	PC1C1  = 1;		// PortC Bit1 set to CMOS Output...
CLINEA 0000H 0001H 050FH 0002H 0031H
	sb	0f263h.1

;;	PC1C0  = 1;	
CLINEA 0000H 0001H 0510H 0002H 000DH
	sb	0f262h.1

;;	PC2C1  = 1;		// PortC Bit2 set to CMOS Output...
CLINEA 0000H 0001H 0511H 0002H 0031H
	sb	0f263h.2

;;	PC2C0  = 1;	
CLINEA 0000H 0001H 0512H 0002H 000DH
	sb	0f262h.2

;;	PC3C1  = 1;		// PortC Bit3 set to CMOS Output...
CLINEA 0000H 0001H 0513H 0002H 0031H
	sb	0f263h.3

;;	PC3C0  = 1;		
CLINEA 0000H 0001H 0514H 0002H 000EH
	sb	0f262h.3

;;	PC0MD1  = 0;	// PortC Bit0 set to General Purpose Output...
CLINEA 0000H 0001H 0517H 0002H 003CH
	rb	0f265h.0

;;	PC0MD0  = 0;	
CLINEA 0000H 0001H 0518H 0002H 000EH
	rb	0f264h.0

;;	PC1MD1  = 0;	// PortC Bit1 set to General Purpose Output...
CLINEA 0000H 0001H 0519H 0002H 003CH
	rb	0f265h.1

;;	PC1MD0  = 0;	
CLINEA 0000H 0001H 051AH 0002H 000EH
	rb	0f264h.1

;;	PC2MD1  = 0;	// PortC Bit2 set to General Purpose Output...
CLINEA 0000H 0001H 051BH 0002H 003CH
	rb	0f265h.2

;;	PC2MD0  = 0;	
CLINEA 0000H 0001H 051CH 0002H 000EH
	rb	0f264h.2

;;	PC3MD1  = 0;	// PortC Bit3 set to General Purpose Output...
CLINEA 0000H 0001H 051DH 0002H 003CH
	rb	0f265h.3

;;	PC3MD0  = 0;	
CLINEA 0000H 0001H 051EH 0002H 000EH
	rb	0f264h.3

;;	PC0D = 0;		// C.0 Output OFF....
CLINEA 0000H 0001H 0521H 0002H 0021H
	rb	0f260h.0

;;	PC1D = 0;		// C.1 Output OFF....
CLINEA 0000H 0001H 0522H 0002H 0021H
	rb	0f260h.1

;;	PC2D = 0;		// C.2 Output OFF....
CLINEA 0000H 0001H 0523H 0002H 0021H
	rb	0f260h.2

;;	PC3D = 0;		// C.3 Output OFF....
CLINEA 0000H 0001H 0524H 0002H 0021H
	rb	0f260h.3

;;	main_clrWDT(); 	// Clear WDT
CLINEA 0000H 0001H 0526H 0002H 001DH
	b	_main_clrWDT
CBLOCKEND 182 2 1320
CLINEA 0000H 0001H 0528H 0001H 0001H
CBLOCKEND 182 1 1320
CFUNCTIONEND 182


	rseg $$PortA_Digital_Inputs$main
CFUNCTION 227

_PortA_Digital_Inputs	:
CBLOCK 227 1 1326

;;void PortA_Digital_Inputs(void){
CLINEA 0000H 0001H 052EH 0001H 0020H
CBLOCK 227 2 1326

;;	PA0DIR = 1;		// PortA Bit0 set to Input Mode...
CLINEA 0000H 0001H 0538H 0002H 0030H
	sb	0f251h.0

;;	PA1DIR = 1;		// PortA Bit1 set to Input Mode...
CLINEA 0000H 0001H 0539H 0002H 0030H
	sb	0f251h.1

;;	PA2DIR = 1;		// PortA Bit2 set to Input Mode...
CLINEA 0000H 0001H 053AH 0002H 0030H
	sb	0f251h.2

;;	PA0C1  = 1;		// PortA Bit0 set to Input with Pull-Up Resistor...
CLINEA 0000H 0001H 053EH 0002H 0041H
	sb	0f253h.0

;;	PA0C0  = 0;		
CLINEA 0000H 0001H 053FH 0002H 000EH
	rb	0f252h.0

;;	PA1C1  = 1;		// PortA Bit1 set to Input with Pull-Up Resistor...
CLINEA 0000H 0001H 0540H 0002H 0041H
	sb	0f253h.1

;;	PA1C0  = 0;	
CLINEA 0000H 0001H 0541H 0002H 000DH
	rb	0f252h.1

;;	PA2C1  = 1;		// PortA Bit2 set to Input with Pull-Up Resistor...
CLINEA 0000H 0001H 0542H 0002H 0041H
	sb	0f253h.2

;;	PA2C0  = 0;	
CLINEA 0000H 0001H 0543H 0002H 000DH
	rb	0f252h.2

;;	PA0MD1  = 0;	// PortA Bit0 set to General Purpose I/O...
CLINEA 0000H 0001H 0546H 0002H 0039H
	rb	0f255h.0

;;	PA0MD0  = 0;	
CLINEA 0000H 0001H 0547H 0002H 000EH
	rb	0f254h.0

;;	PA1MD1  = 0;	// PortA Bit1 set to General Purpose I/O...
CLINEA 0000H 0001H 0548H 0002H 0039H
	rb	0f255h.1

;;	PA1MD0  = 0;	
CLINEA 0000H 0001H 0549H 0002H 000EH
	rb	0f254h.1

;;	PA2MD1  = 0;	// PortA Bit2 set to General Purpose I/O...
CLINEA 0000H 0001H 054AH 0002H 0039H
	rb	0f255h.2

;;	PA2MD0  = 0;	
CLINEA 0000H 0001H 054BH 0002H 000EH
	rb	0f254h.2

;;	main_clrWDT(); 	// Clear WDT
CLINEA 0000H 0001H 054DH 0002H 001DH
	b	_main_clrWDT
CBLOCKEND 227 2 1359
CLINEA 0000H 0001H 054FH 0001H 0001H
CBLOCKEND 227 1 1359
CFUNCTIONEND 227


	rseg $$PinB0_PWM$main
CFUNCTION 228

_PinB0_PWM	:
CBLOCK 228 1 1367

;;void PinB0_PWM(void){
CLINEA 0000H 0001H 0557H 0001H 0015H
CBLOCK 228 2 1367

;;	PB0DIR = 0;		// PortB Bit0 set to Output Mode...
CLINEA 0000H 0001H 0563H 0002H 0031H
	rb	0f259h.0

;;	PB0C1  = 1;		// PortB Bit0 set to CMOS Output...
CLINEA 0000H 0001H 0566H 0002H 0031H
	sb	0f25bh.0

;;	PB0C0  = 1;		
CLINEA 0000H 0001H 0567H 0002H 000EH
	sb	0f25ah.0

;;	PB0MD1  = 0;	// PortB Bit0 set to PWM Output (0,1)...
CLINEA 0000H 0001H 056AH 0002H 0036H
	rb	0f25dh.0

;;	PB0MD0  = 1;	
CLINEA 0000H 0001H 056BH 0002H 000EH
	sb	0f25ch.0

;;	PCCS1 = 0;	//00= LS; 01=HS; 10=PLL
CLINEA 0000H 0001H 056FH 0002H 0023H
	rb	0f916h.1

;;	PCCS0 = 1;
CLINEA 0000H 0001H 0570H 0002H 000BH
	sb	0f916h.0

;;	PWCP = 4250;		// Init Period to (1=255kHz; 10=46kHz; 50=10kHz; 200=2.5kH; ; 3185 = 160Hz; 3400=150Hz; 4250=120Hz; 5000=102Hz)
CLINEA 0000H 0001H 0573H 0002H 007EH
	mov	r0,	#09ah
	mov	r1,	#010h
	st	er0,	0f910h

;;	PWCD =    12;		//12    ~  0.25% duty cycle @ 160Hz
CLINEA 0000H 0001H 057DH 0002H 0033H
	mov	er0,	#12
	st	er0,	0f912h

;;	PCRUN = 0;		// OFF to start
CLINEA 0000H 0001H 057FH 0002H 001CH
	rb	0f917h.0
CBLOCKEND 228 2 1409

;;}
CLINEA 0000H 0001H 0581H 0001H 0001H
	rt
CBLOCKEND 228 1 1409
CFUNCTIONEND 228

	public _KMX61_WUFC
	public _KMX61_INC3_CFGDAT
	public _KMX61_TEMP_EN_CNTL_CFGDAT
	public _NOPms
	public _KMX61_INC1_CFGDAT
	public _KMX61_CNTL1_CFGDAT
	public _KMX61_CNTL2_CFGDAT
	public _KMX61_WUFC_CFGDAT
	public _Manufact_ID
	public _checkI2C
	public _DoorOpen
	public _main_clrWDT
	public _ALS0_LSB
	public _ALS0_MSB
	public _KMX61_BTSC
	public _KMX61_ODCNTL
	public _KMX61_COTR
	public _main_reqNotHalt
	public _KMX61_STATUS_REG
	public _KMX61_WUFTH
	public _KMX61_STBY_REG
	public _KMX61_INC1
	public _KMX61_INC2
	public _KMX61_INC3
	public _KMX61_ACCEL_YOUT_H
	public _KMX61_ACCEL_YOUT_L
	public _GetUART_Command
	public _KMX61_INS1
	public _KMX61_INS2
	public _KMX61_MAG_YOUT_H
	public _KMX61_MAG_YOUT_L
	public _KMX61_WUFTH_CFGDAT
	public _PortA_Digital_Inputs
	public _BLINK
	public _KMX61_BUF_THRESH_H
	public _KMX61_BUF_THRESH_L
	public _KMX61_BUF_CLEAR
	public _SWEEP_RGB
	public _main
	public _I2C_Write
	public _KMX61_ODCNTL_CFGDAT
	public _OutputPWM
	public _NOP1000
	public _Prox_ModeCTR
	public _KMX61_BTH
	public _KMX61_TEMP_EN_CNTL
	public _KMX61_CNTL1
	public _write
	public _KMX61_CNTL2
	public _KMX61_XOUT_HPF_L
	public _KMX61_XOUT_HPF_H
	public _ALS1_LSB
	public _ALS1_MSB
	public _TimeFlag
	public _KMX61_INL
	public _KMX61_ZOUT_HPF_L
	public _KMX61_ZOUT_HPF_H
	public _PortC_Low
	public _KMX61_YOUT_HPF_L
	public _KMX61_YOUT_HPF_H
	public _KMX61_SN_1
	public _KMX61_SN_2
	public _KMX61_SN_3
	public _KMX61_SN_4
	public _KMX61_SELF_TEST_CFGDAT
	public _Prox_PS_LSB
	public _Prox_PS_MSB
	public _PortB_Low
	public _KMX61_I2C_ADDR
	public _KMX61_BUF_READ
	public _KMX61_TEMP_OUT_H
	public _KMX61_TEMP_OUT_L
	public _KMX61_ACCEL_XOUT_H
	public _KMX61_ACCEL_ZOUT_H
	public _KMX61_ACCEL_XOUT_L
	public _KMX61_ACCEL_ZOUT_L
	public _KMX61_BUF_CTRL2_CFGDAT
	public _I2C_Read
	public _KMX61_BUF_CTRL1_CFGDAT
	public _KMX61_BUF_CTRL1
	public _KMX61_BUF_CTRL2
	public _KMX61_BUF_STATUS_L
	public _PortA_Low
	public _KMX61_BUF_STATUS_H
	public _analog_comparator
	public _KMX61_MAG_XOUT_H
	public _KMX61_MAG_ZOUT_H
	public _KMX61_MAG_XOUT_L
	public _KMX61_MAG_ZOUT_L
	public _KMX61_SELF_TEST
	public _KMX61_WHO_AM_I
	public _Init_KMX61
	public _PinB0_PWM
	public _KMX61_BUF_STATUS_REG
	public _BLINK_SLOW
	__flgUartFin comm data 01h #00h
	_SensorReturn comm data 04h #00h
	_uniRawSensorOut comm data 06h #00h
	__flgPB2Int comm data 01h #00h
	__flgI2CFin comm data 01h #00h
	_RegVal comm data 01h #00h
	__reqNotHalt comm data 01h #00h
	_timer comm data 02h #00h
	extrn code near : _irq_init
	extrn code near : _uart_PortSet
	extrn code near : _i2c_stop
	extrn code near : _i2c_startReceive
	extrn code near : _uart_startReceive
	extrn code near : _uart_init
	extrn code near : _i2c_continue
	extrn code near : _irq_di
	extrn code near : _irq_ei
	extrn code near : _irq_setHdr
	extrn code near : _uart_stop
	extrn code near : _uart_startSend
	extrn code near : _i2c_startSend
	extrn code near : _uart_continue
	extrn code near : _i2c_init
	extrn code near : _tm_init
	extrn code : $$start_up

	cseg #00h at 02h
	dw	$$start_up

	rseg $$NINITTAB
	db	00h
	align
	dw	02h
	db	01h
	db	00h
	db	00h
	db	020h
	db	020h
	db	020h
	db	020h
	db	020h
	db	020h
	db	020h
	db	020h

	rseg $$TAB_uartSetParam$main
__uartSetParam :
	dw	04b00h
	dw	00h
	db	00h
	db	02h
	db	00h
	db	00h
	db	00h
	align

	rseg $$TABManufact_ID$main
_Manufact_ID :
	db	092h

	rseg $$TABProx_ModeCTR$main
_Prox_ModeCTR :
	db	041h

	rseg $$TABProx_PS_LSB$main
_Prox_PS_LSB :
	db	044h

	rseg $$TABProx_PS_MSB$main
_Prox_PS_MSB :
	db	045h

	rseg $$TABALS0_LSB$main
_ALS0_LSB :
	db	046h

	rseg $$TABALS0_MSB$main
_ALS0_MSB :
	db	047h

	rseg $$TABALS1_LSB$main
_ALS1_LSB :
	db	048h

	rseg $$TABALS1_MSB$main
_ALS1_MSB :
	db	049h

	rseg $$TABKMX61_I2C_ADDR$main
_KMX61_I2C_ADDR :
	db	0eh

	rseg $$TABKMX61_WHO_AM_I$main
_KMX61_WHO_AM_I :
	db	00h

	rseg $$TABKMX61_INS1$main
_KMX61_INS1 :
	db	01h

	rseg $$TABKMX61_INS2$main
_KMX61_INS2 :
	db	02h

	rseg $$TABKMX61_STATUS_REG$main
_KMX61_STATUS_REG :
	db	03h

	rseg $$TABKMX61_ACCEL_XOUT_L$main
_KMX61_ACCEL_XOUT_L :
	db	0ah

	rseg $$TABKMX61_ACCEL_XOUT_H$main
_KMX61_ACCEL_XOUT_H :
	db	0bh

	rseg $$TABKMX61_ACCEL_YOUT_L$main
_KMX61_ACCEL_YOUT_L :
	db	0ch

	rseg $$TABKMX61_ACCEL_YOUT_H$main
_KMX61_ACCEL_YOUT_H :
	db	0dh

	rseg $$TABKMX61_ACCEL_ZOUT_L$main
_KMX61_ACCEL_ZOUT_L :
	db	0eh

	rseg $$TABKMX61_ACCEL_ZOUT_H$main
_KMX61_ACCEL_ZOUT_H :
	db	0fh

	rseg $$TABKMX61_TEMP_OUT_L$main
_KMX61_TEMP_OUT_L :
	db	010h

	rseg $$TABKMX61_TEMP_OUT_H$main
_KMX61_TEMP_OUT_H :
	db	011h

	rseg $$TABKMX61_MAG_XOUT_L$main
_KMX61_MAG_XOUT_L :
	db	012h

	rseg $$TABKMX61_MAG_XOUT_H$main
_KMX61_MAG_XOUT_H :
	db	013h

	rseg $$TABKMX61_MAG_YOUT_L$main
_KMX61_MAG_YOUT_L :
	db	014h

	rseg $$TABKMX61_MAG_YOUT_H$main
_KMX61_MAG_YOUT_H :
	db	015h

	rseg $$TABKMX61_MAG_ZOUT_L$main
_KMX61_MAG_ZOUT_L :
	db	016h

	rseg $$TABKMX61_MAG_ZOUT_H$main
_KMX61_MAG_ZOUT_H :
	db	017h

	rseg $$TABKMX61_XOUT_HPF_L$main
_KMX61_XOUT_HPF_L :
	db	018h

	rseg $$TABKMX61_XOUT_HPF_H$main
_KMX61_XOUT_HPF_H :
	db	019h

	rseg $$TABKMX61_YOUT_HPF_L$main
_KMX61_YOUT_HPF_L :
	db	01ah

	rseg $$TABKMX61_YOUT_HPF_H$main
_KMX61_YOUT_HPF_H :
	db	01bh

	rseg $$TABKMX61_ZOUT_HPF_L$main
_KMX61_ZOUT_HPF_L :
	db	01ch

	rseg $$TABKMX61_ZOUT_HPF_H$main
_KMX61_ZOUT_HPF_H :
	db	01dh

	rseg $$TABKMX61_SN_1$main
_KMX61_SN_1 :
	db	024h

	rseg $$TABKMX61_SN_2$main
_KMX61_SN_2 :
	db	025h

	rseg $$TABKMX61_SN_3$main
_KMX61_SN_3 :
	db	026h

	rseg $$TABKMX61_SN_4$main
_KMX61_SN_4 :
	db	027h

	rseg $$TABKMX61_INL$main
_KMX61_INL :
	db	028h

	rseg $$TABKMX61_STBY_REG$main
_KMX61_STBY_REG :
	db	029h

	rseg $$TABKMX61_CNTL1$main
_KMX61_CNTL1 :
	db	02ah

	rseg $$TABKMX61_CNTL2$main
_KMX61_CNTL2 :
	db	02bh

	rseg $$TABKMX61_ODCNTL$main
_KMX61_ODCNTL :
	db	02ch

	rseg $$TABKMX61_INC1$main
_KMX61_INC1 :
	db	02dh

	rseg $$TABKMX61_INC2$main
_KMX61_INC2 :
	db	02eh

	rseg $$TABKMX61_INC3$main
_KMX61_INC3 :
	db	02fh

	rseg $$TABKMX61_COTR$main
_KMX61_COTR :
	db	03ch

	rseg $$TABKMX61_WUFTH$main
_KMX61_WUFTH :
	db	03dh

	rseg $$TABKMX61_WUFC$main
_KMX61_WUFC :
	db	03eh

	rseg $$TABKMX61_BTH$main
_KMX61_BTH :
	db	03fh

	rseg $$TABKMX61_BTSC$main
_KMX61_BTSC :
	db	040h

	rseg $$TABKMX61_TEMP_EN_CNTL$main
_KMX61_TEMP_EN_CNTL :
	db	04ch

	rseg $$TABKMX61_SELF_TEST$main
_KMX61_SELF_TEST :
	db	060h

	rseg $$TABKMX61_BUF_THRESH_H$main
_KMX61_BUF_THRESH_H :
	db	076h

	rseg $$TABKMX61_BUF_THRESH_L$main
_KMX61_BUF_THRESH_L :
	db	077h

	rseg $$TABKMX61_BUF_CTRL1$main
_KMX61_BUF_CTRL1 :
	db	078h

	rseg $$TABKMX61_BUF_CTRL2$main
_KMX61_BUF_CTRL2 :
	db	079h

	rseg $$TABKMX61_BUF_CLEAR$main
_KMX61_BUF_CLEAR :
	db	07ah

	rseg $$TABKMX61_BUF_STATUS_REG$main
_KMX61_BUF_STATUS_REG :
	db	07bh

	rseg $$TABKMX61_BUF_STATUS_H$main
_KMX61_BUF_STATUS_H :
	db	07ch

	rseg $$TABKMX61_BUF_STATUS_L$main
_KMX61_BUF_STATUS_L :
	db	07dh

	rseg $$TABKMX61_BUF_READ$main
_KMX61_BUF_READ :
	db	07eh

	rseg $$TABKMX61_SELF_TEST_CFGDAT$main
_KMX61_SELF_TEST_CFGDAT :
	db	00h

	rseg $$TABKMX61_CNTL1_CFGDAT$main
_KMX61_CNTL1_CFGDAT :
	db	053h

	rseg $$TABKMX61_CNTL2_CFGDAT$main
_KMX61_CNTL2_CFGDAT :
	db	00h

	rseg $$TABKMX61_ODCNTL_CFGDAT$main
_KMX61_ODCNTL_CFGDAT :
	db	00h

	rseg $$TABKMX61_TEMP_EN_CNTL_CFGDAT$main
_KMX61_TEMP_EN_CNTL_CFGDAT :
	db	01h

	rseg $$TABKMX61_BUF_CTRL1_CFGDAT$main
_KMX61_BUF_CTRL1_CFGDAT :
	db	00h

	rseg $$TABKMX61_BUF_CTRL2_CFGDAT$main
_KMX61_BUF_CTRL2_CFGDAT :
	db	00h

	rseg $$TABKMX61_INC1_CFGDAT$main
_KMX61_INC1_CFGDAT :
	db	029h

	rseg $$TABKMX61_INC3_CFGDAT$main
_KMX61_INC3_CFGDAT :
	db	02h

	rseg $$TABKMX61_WUFTH_CFGDAT$main
_KMX61_WUFTH_CFGDAT :
	db	08h

	rseg $$TABKMX61_WUFC_CFGDAT$main
_KMX61_WUFC_CFGDAT :
	db	01h

	rseg $$TAB$$S135$main
$$S135 :
	DB	"Bulb Fully On\x0a", 00H

	rseg $$TAB$$S139$main
$$S139 :
	DB	"Bulb is Off\x0a", 00H

	rseg $$NINITVAR
_DoorOpen :
	ds	01h
	align
_TimeFlag :
	ds	02h
_SensorIntializationFlag :
	ds	01h
_LEDFlashFlag :
	ds	01h
_LEDChangeFlag :
	ds	01h
_str :
	ds	08h

	rseg $$NVARmain
_KnotsUnit :
	ds	01h
	align
_i :
	ds	02h
_j :
	ds	02h
_KnotsSpeed :
	ds	08h
_Latitude :
	ds	08h
_HomeTolerance :
	ds	08h
_Eleveation :
	ds	02h
_hexToDecOffset :
	ds	02h
_ReceiverState :
	ds	01h
_LonDir :
	ds	01h
_CheckPointIndex :
	ds	02h
_Geoid :
	ds	08h
_Date :
	ds	04h
_val :
	ds	0320h
_txChar :
	ds	03h
	align
_LatDest :
	ds	028h
_Course :
	ds	08h
_GSV_Info :
	ds	018h
_PDOP :
	ds	08h
_isTrueNorth :
	ds	01h
_isBulbOn :
	ds	01h
_flag :
	ds	02h
_bulbIntensity :
	ds	02h
_fixQuality :
	ds	02h
_checkSum :
	ds	02h
_VDOP :
	ds	08h
_LonDest :
	ds	028h
_prevBulbIntensity :
	ds	08h
_GroundSpeed :
	ds	08h
_bulbEnable :
	ds	02h
_SensorPlatformSelection :
	ds	01h
_LatLonValid :
	ds	01h
_Mode :
	ds	02h
_sigDigits :
	ds	02h
_LatDir :
	ds	01h
	align
_isSettingMode :
	ds	02h
_isNeg :
	ds	02h
_MagDegrees :
	ds	08h
_MagDir :
	ds	01h
	align
_wordIndex :
	ds	02h
_temp :
	ds	01h
_speedUnit :
	ds	01h
_Azimuth :
	ds	02h
_TrueDegrees :
	ds	08h
_Longitude :
	ds	08h
_MSL :
	ds	08h
_MagneticVariation :
	ds	08h
_SNR :
	ds	02h
_buffer :
	ds	014h
_KMHSpeed :
	ds	01h
	align
_GSV_index :
	ds	02h
_word :
	ds	064h
_UTC :
	ds	06h
_PRN_num :
	ds	02h
_numSat :
	ds	02h
_GSV_numMessage :
	ds	02h
_HDOP :
	ds	08h
_SV_ID :
	ds	018h
_isMagNorth :
	ds	01h

	rseg $$NINITTAB
	align

	rseg $$NINITVAR
	align
	extrn code : __dcmpu8sw
	extrn code : __dmulu8sw

	end
